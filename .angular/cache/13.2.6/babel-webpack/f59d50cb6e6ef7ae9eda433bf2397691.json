{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, Injectable, Optional, Inject, Output, Component, ChangeDetectionStrategy, ViewChild, Input, EventEmitter, RendererStyleFlags2, ElementRef, ContentChild, NgModule } from '@angular/core';\nimport * as i9 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, PlatformModule } from '@angular/cdk/platform';\nimport * as i2$1 from 'ngx-scrollbar/smooth-scroll';\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Observable, fromEvent, merge, EMPTY, of, Subject, animationFrameScheduler, BehaviorSubject, Subscription } from 'rxjs';\nimport { tap, map, takeUntil, switchMap, pluck, distinctUntilChanged, mergeMap, debounceTime, pairwise, filter, auditTime } from 'rxjs/operators';\nconst _c0 = [\"scrollbarY\"];\nconst _c1 = [\"scrollbarX\"];\n\nfunction NgScrollbar_ng_container_5_scrollbar_x_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"scrollbar-x\", null, 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"scrollable\", ctx_r1.state.isHorizontallyScrollable)(\"fit\", ctx_r1.state.verticalUsed);\n  }\n}\n\nfunction NgScrollbar_ng_container_5_scrollbar_y_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"scrollbar-y\", null, 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵattribute(\"scrollable\", ctx_r2.state.isVerticallyScrollable)(\"fit\", ctx_r2.state.horizontalUsed);\n  }\n}\n\nfunction NgScrollbar_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, NgScrollbar_ng_container_5_scrollbar_x_1_Template, 2, 2, \"scrollbar-x\", 3);\n    i0.ɵɵtemplate(2, NgScrollbar_ng_container_5_scrollbar_y_2_Template, 2, 2, \"scrollbar-y\", 3);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.state.horizontalUsed);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.state.verticalUsed);\n  }\n}\n\nconst _c2 = [\"*\"];\n\nfunction preventSelection(doc) {\n  return tap(() => {\n    doc.onselectstart = () => false;\n  });\n}\n\nfunction enableSelection(doc) {\n  return tap(() => {\n    doc.onselectstart = null;\n  });\n}\n\nfunction stopPropagation() {\n  return tap(e => e.stopPropagation());\n}\n/**\r\n * Check if pointer is within scrollbar bounds\r\n */\n\n\nfunction isWithinBounds(e, rect) {\n  return e.clientX >= rect.left && e.clientX <= rect.left + rect.width && e.clientY >= rect.top && e.clientY <= rect.top + rect.height;\n}\n\nclass ScrollViewport {\n  constructor(viewPort) {\n    this.viewPort = viewPort;\n    this.nativeElement = viewPort.nativeElement;\n  } // Get viewport size, clientHeight or clientWidth\n\n\n  get clientHeight() {\n    return this.nativeElement.clientHeight;\n  }\n\n  get clientWidth() {\n    return this.nativeElement.clientWidth;\n  }\n\n  get scrollHeight() {\n    return this.nativeElement.scrollHeight;\n  }\n\n  get scrollWidth() {\n    return this.nativeElement.scrollWidth;\n  } // Get viewport scroll offset, scrollTop or scrollLeft\n\n\n  get scrollTop() {\n    return this.nativeElement.scrollTop;\n  }\n\n  get scrollLeft() {\n    return this.nativeElement.scrollLeft;\n  } // Get the available scrollable size\n\n\n  get scrollMaxX() {\n    return this.scrollWidth - this.clientWidth;\n  }\n\n  get scrollMaxY() {\n    return this.scrollHeight - this.clientHeight;\n  }\n\n  get contentHeight() {\n    var _a;\n\n    return ((_a = this.contentWrapperElement) === null || _a === void 0 ? void 0 : _a.clientHeight) || 0;\n  }\n\n  get contentWidth() {\n    var _a;\n\n    return ((_a = this.contentWrapperElement) === null || _a === void 0 ? void 0 : _a.clientWidth) || 0;\n  }\n  /**\r\n   * Activate viewport pointer events such as 'hovered' and 'clicked' events\r\n   */\n\n\n  activatePointerEvents(propagate, destroyed) {\n    this.hovered = new Observable(subscriber => {\n      // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\n      const mouseMoveStream = fromEvent(this.nativeElement, 'mousemove', {\n        passive: true\n      });\n      const mouseMove = propagate ? mouseMoveStream : mouseMoveStream.pipe(stopPropagation()); // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\n\n      const mouseLeave = fromEvent(this.nativeElement, 'mouseleave', {\n        passive: true\n      }).pipe(map(() => false));\n      merge(mouseMove, mouseLeave).pipe(tap(e => subscriber.next(e)), takeUntil(destroyed)).subscribe();\n    });\n    this.clicked = new Observable(subscriber => {\n      const mouseDown = fromEvent(this.nativeElement, 'mousedown', {\n        passive: true\n      }).pipe(tap(e => subscriber.next(e)));\n      const mouseUp = fromEvent(this.nativeElement, 'mouseup', {\n        passive: true\n      }).pipe(tap(() => subscriber.next(false)));\n      mouseDown.pipe(switchMap(() => mouseUp), takeUntil(destroyed)).subscribe();\n    });\n  }\n  /**\r\n   * Set this directive as a non-functional wrapper, called when a custom viewport is used\r\n   */\n\n\n  setAsWrapper() {\n    // In this case the default viewport and the default content wrapper will act as a mask\n    this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\n\n    if (this.nativeElement.firstElementChild) {\n      this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\n    }\n  }\n  /**\r\n   * Set this directive as  the viewport, called when no custom viewport is used\r\n   */\n\n\n  setAsViewport(customClassName) {\n    this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`; // Check if the custom viewport has only one child and set it as the content wrapper\n\n    if (this.nativeElement.firstElementChild) {\n      this.contentWrapperElement = this.nativeElement.firstElementChild;\n      this.contentWrapperElement.classList.add('ng-scroll-content');\n    }\n  }\n  /**\r\n   * Scroll viewport vertically\r\n   */\n\n\n  scrollYTo(value) {\n    this.nativeElement.scrollTop = value;\n  }\n  /**\r\n   * Scroll viewport horizontally\r\n   */\n\n\n  scrollXTo(value) {\n    this.nativeElement.scrollLeft = value;\n  }\n\n}\n\nScrollViewport.ɵfac = function ScrollViewport_Factory(t) {\n  return new (t || ScrollViewport)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nScrollViewport.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ScrollViewport,\n  selectors: [[\"\", \"scrollViewport\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollViewport, [{\n    type: Directive,\n    args: [{\n      selector: '[scrollViewport]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\n\nclass NgScrollbarBase {}\n\nNgScrollbarBase.ɵfac = function NgScrollbarBase_Factory(t) {\n  return new (t || NgScrollbarBase)();\n};\n\nNgScrollbarBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgScrollbarBase\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgScrollbarBase, [{\n    type: Directive\n  }], null, null);\n})();\n\nconst NG_SCROLLBAR_OPTIONS = new InjectionToken('NG_SCROLLBAR_OPTIONS');\nconst defaultOptions = {\n  viewClass: '',\n  trackClass: '',\n  thumbClass: '',\n  track: 'vertical',\n  appearance: 'compact',\n  visibility: 'native',\n  position: 'native',\n  pointerEventsMethod: 'viewport',\n  trackClickScrollDuration: 300,\n  minThumbSize: 20,\n  windowResizeDebounce: 0,\n  sensorDebounce: 0,\n  scrollAuditTime: 0,\n  viewportPropagateMouseMove: true,\n  autoHeightDisabled: true,\n  autoWidthDisabled: true,\n  sensorDisabled: false,\n  pointerEventsDisabled: false\n};\n\nclass ScrollbarManager {\n  constructor(options) {\n    this.globalOptions = options ? Object.assign(Object.assign({}, defaultOptions), options) : defaultOptions;\n    this.rtlScrollAxisType = getRtlScrollAxisType();\n  }\n\n}\n\nScrollbarManager.ɵfac = function ScrollbarManager_Factory(t) {\n  return new (t || ScrollbarManager)(i0.ɵɵinject(NG_SCROLLBAR_OPTIONS, 8));\n};\n\nScrollbarManager.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ScrollbarManager,\n  factory: ScrollbarManager.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollbarManager, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [NG_SCROLLBAR_OPTIONS]\n      }]\n    }];\n  }, null);\n})(); // @dynamic\n\n\nclass TrackAdapter {\n  constructor(cmp, trackElement, document) {\n    this.cmp = cmp;\n    this.trackElement = trackElement;\n    this.document = document;\n  } // Stream that emits when the track element is clicked\n\n\n  get clicked() {\n    const mouseDown = fromEvent(this.trackElement, 'mousedown', {\n      passive: true\n    }).pipe(stopPropagation(), preventSelection(this.document));\n    const mouseup = fromEvent(this.document, 'mouseup', {\n      passive: true\n    }).pipe(stopPropagation(), enableSelection(this.document), switchMap(() => EMPTY));\n    return merge(mouseDown, mouseup);\n  } // Get track client rect\n\n\n  get clientRect() {\n    return this.trackElement.getBoundingClientRect();\n  }\n  /**\r\n   * Stream that emits when scrollbar track is clicked\r\n   */\n\n\n  onTrackClicked(e, thumbSize, scrollSize) {\n    return of(e).pipe(pluck(this.pageProperty), // Calculate scrollTo position\n    map(pageOffset => {\n      const clickOffset = pageOffset - this.offset;\n      const offset = clickOffset - thumbSize / 2;\n      const ratio = offset / this.size;\n      return ratio * scrollSize;\n    }), // Smooth scroll to position\n    tap(value => {\n      this.cmp.scrollTo(Object.assign(Object.assign({}, this.mapToScrollToOption(value)), {\n        duration: coerceNumberProperty(this.cmp.trackClickScrollDuration)\n      }));\n    }));\n  }\n\n}\n\nTrackAdapter.ɵfac = function TrackAdapter_Factory(t) {\n  return new (t || TrackAdapter)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(HTMLElement), i0.ɵɵdirectiveInject(Document));\n};\n\nTrackAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TrackAdapter\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrackAdapter, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: HTMLElement\n    }, {\n      type: Document\n    }];\n  }, null);\n})();\n\nclass TrackXDirective extends TrackAdapter {\n  constructor(cmp, trackElement, document) {\n    super(cmp, trackElement.nativeElement, document);\n    this.cmp = cmp;\n    this.document = document;\n  }\n\n  get pageProperty() {\n    return 'pageX';\n  }\n\n  get offset() {\n    return this.clientRect.left;\n  }\n\n  get size() {\n    return this.trackElement.clientWidth;\n  }\n\n  mapToScrollToOption(value) {\n    return {\n      left: value\n    };\n  }\n\n}\n\nTrackXDirective.ɵfac = function TrackXDirective_Factory(t) {\n  return new (t || TrackXDirective)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nTrackXDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TrackXDirective,\n  selectors: [[\"\", \"scrollbarTrackX\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrackXDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[scrollbarTrackX]'\n    }]\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();\n\nclass TrackYDirective extends TrackAdapter {\n  constructor(cmp, trackElement, document) {\n    super(cmp, trackElement.nativeElement, document);\n    this.cmp = cmp;\n    this.document = document;\n  }\n\n  get pageProperty() {\n    return 'pageY';\n  }\n\n  get offset() {\n    return this.clientRect.top;\n  }\n\n  get size() {\n    return this.trackElement.clientHeight;\n  }\n\n  mapToScrollToOption(value) {\n    return {\n      top: value\n    };\n  }\n\n}\n\nTrackYDirective.ɵfac = function TrackYDirective_Factory(t) {\n  return new (t || TrackYDirective)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nTrackYDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: TrackYDirective,\n  selectors: [[\"\", \"scrollbarTrackY\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TrackYDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[scrollbarTrackY]'\n    }]\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})(); // @dynamic\n\n\nclass ThumbAdapter {\n  constructor(cmp, track, thumbElement, document) {\n    this.cmp = cmp;\n    this.track = track;\n    this.thumbElement = thumbElement;\n    this.document = document; // Stream that emits dragging state\n\n    this._dragging = new Subject();\n    this.dragging = this._dragging.pipe(distinctUntilChanged());\n  }\n\n  get trackMax() {\n    return this.track.size - this.size;\n  } // Get thumb client rect\n\n\n  get clientRect() {\n    return this.thumbElement.getBoundingClientRect();\n  } // Stream that emits when scrollbar thumb is clicked\n\n\n  get clicked() {\n    return fromEvent(this.thumbElement, 'mousedown', {\n      passive: true\n    }).pipe(stopPropagation());\n  } // Calculate and update thumb position and size\n\n\n  update() {\n    const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize);\n    const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\n    animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\n  }\n  /**\r\n   * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n   * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n   */\n\n\n  dragged(event) {\n    let trackMaxStart;\n    let scrollMaxStart;\n    const dragStart = of(event).pipe(preventSelection(this.document), tap(() => {\n      // Capture scrollMax and trackMax once\n      trackMaxStart = this.trackMax;\n      scrollMaxStart = this.viewportScrollMax;\n      this.setDragging(true);\n    }));\n    const dragging = fromEvent(this.document, 'mousemove', {\n      capture: true,\n      passive: true\n    }).pipe(stopPropagation());\n    const dragEnd = fromEvent(this.document, 'mouseup', {\n      capture: true\n    }).pipe(stopPropagation(), enableSelection(this.document), tap(() => this.setDragging(false)));\n    return dragStart.pipe(pluck(this.pageProperty), map(pageOffset => pageOffset - this.dragStartOffset), mergeMap(mouseDownOffset => dragging.pipe(pluck(this.clientProperty), // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\n    map(mouseOffset => mouseOffset - this.track.offset), map(offset => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart), map(position => this.handleDrag(position, scrollMaxStart)), tap(position => this.scrollTo(position)), takeUntil(dragEnd))));\n  }\n\n}\n\nThumbAdapter.ɵfac = function ThumbAdapter_Factory(t) {\n  return new (t || ThumbAdapter)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(TrackAdapter), i0.ɵɵdirectiveInject(HTMLElement), i0.ɵɵdirectiveInject(Document));\n};\n\nThumbAdapter.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThumbAdapter,\n  outputs: {\n    dragging: \"dragging\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThumbAdapter, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: TrackAdapter\n    }, {\n      type: HTMLElement\n    }, {\n      type: Document\n    }];\n  }, {\n    dragging: [{\n      type: Output\n    }]\n  });\n})();\n/**\r\n * Calculate scrollbar thumb size\r\n */\n\n\nfunction calculateThumbSize(trackSize, contentSize, minThumbSize) {\n  const scrollbarRatio = trackSize / contentSize;\n  const thumbSize = scrollbarRatio * trackSize;\n  return Math.max(~~thumbSize, minThumbSize);\n}\n/**\r\n * Calculate scrollbar thumb position\r\n */\n\n\nfunction calculateThumbPosition(scrollPosition, scrollMax, trackMax) {\n  return scrollPosition * trackMax / scrollMax;\n}\n\nclass ThumbXDirective extends ThumbAdapter {\n  constructor(cmp, track, element, document, dir) {\n    super(cmp, track, element.nativeElement, document);\n    this.cmp = cmp;\n    this.track = track;\n    this.element = element;\n    this.document = document;\n    this.dir = dir;\n  }\n\n  get clientProperty() {\n    return 'clientX';\n  }\n\n  get pageProperty() {\n    return 'pageX';\n  }\n\n  get viewportScrollSize() {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  get viewportScrollOffset() {\n    return this.cmp.viewport.scrollLeft;\n  }\n\n  get viewportScrollMax() {\n    return this.cmp.viewport.scrollMaxX;\n  }\n\n  get dragStartOffset() {\n    return this.clientRect.left + this.document.defaultView.pageXOffset || 0;\n  }\n\n  get size() {\n    return this.thumbElement.clientWidth;\n  }\n\n  updateStyles(position, size) {\n    this.thumbElement.style.width = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\n  }\n\n  handleDrag(position, scrollMax) {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === 1\n      /* NEGATED */\n      ) {\n        return position - scrollMax;\n      }\n\n      if (this.cmp.manager.rtlScrollAxisType === 2\n      /* INVERTED */\n      ) {\n        return scrollMax - position;\n      } // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\n      //   return position;\n      // }\n\n    }\n\n    return position;\n  }\n\n  handleDirection(position, trackMax) {\n    if (this.dir.value === 'rtl') {\n      if (this.cmp.manager.rtlScrollAxisType === 2\n      /* INVERTED */\n      ) {\n        return -position;\n      }\n\n      if (this.cmp.manager.rtlScrollAxisType === 0\n      /* NORMAL */\n      ) {\n        return position - trackMax;\n      } // Keeping this as a memo\n      // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\n      //   return position;\n      // }\n\n    }\n\n    return position;\n  }\n\n  setDragging(value) {\n    this.cmp.setDragging({\n      horizontalDragging: value\n    });\n  }\n\n  scrollTo(position) {\n    this.cmp.viewport.scrollXTo(position);\n  }\n\n}\n\nThumbXDirective.ɵfac = function ThumbXDirective_Factory(t) {\n  return new (t || ThumbXDirective)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(TrackXDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i3.Directionality));\n};\n\nThumbXDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThumbXDirective,\n  selectors: [[\"\", \"scrollbarThumbX\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThumbXDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[scrollbarThumbX]'\n    }]\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: TrackXDirective\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i3.Directionality\n    }];\n  }, null);\n})();\n\nclass ThumbYDirective extends ThumbAdapter {\n  constructor(cmp, track, element, document) {\n    super(cmp, track, element.nativeElement, document);\n    this.cmp = cmp;\n    this.track = track;\n    this.element = element;\n    this.document = document;\n  }\n\n  get pageProperty() {\n    return 'pageY';\n  }\n\n  get viewportScrollSize() {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  get viewportScrollOffset() {\n    return this.cmp.viewport.scrollTop;\n  }\n\n  get viewportScrollMax() {\n    return this.cmp.viewport.scrollMaxY;\n  }\n\n  get clientProperty() {\n    return 'clientY';\n  }\n\n  get dragStartOffset() {\n    return this.clientRect.top + this.document.defaultView.pageYOffset || 0;\n  }\n\n  get size() {\n    return this.thumbElement.clientHeight;\n  }\n\n  updateStyles(position, size) {\n    this.thumbElement.style.height = `${size}px`;\n    this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\n  }\n\n  handleDrag(position) {\n    return position;\n  }\n\n  handleDirection(position) {\n    return position;\n  }\n\n  setDragging(value) {\n    this.cmp.setDragging({\n      verticalDragging: value\n    });\n  }\n\n  scrollTo(position) {\n    this.cmp.viewport.scrollYTo(position);\n  }\n\n}\n\nThumbYDirective.ɵfac = function ThumbYDirective_Factory(t) {\n  return new (t || ThumbYDirective)(i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(TrackYDirective), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nThumbYDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ThumbYDirective,\n  selectors: [[\"\", \"scrollbarThumbY\", \"\"]],\n  features: [i0.ɵɵInheritDefinitionFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ThumbYDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[scrollbarThumbY]'\n    }]\n  }], function () {\n    return [{\n      type: NgScrollbarBase\n    }, {\n      type: TrackYDirective\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})(); // @dynamic\n\n\nclass Scrollbar {\n  constructor(el, cmp, platform, document, zone) {\n    this.el = el;\n    this.cmp = cmp;\n    this.platform = platform;\n    this.document = document;\n    this.zone = zone; // Stream that emits to unsubscribe from all streams\n\n    this.destroyed = new Subject();\n  }\n  /**\r\n   * Activate scrollbar pointer events\r\n   */\n\n\n  activatePointerEvents() {\n    // Stream that emits when scrollbar thumb is dragged\n    let thumbDragEvent; // Stream that emits when scrollbar track is clicked\n\n    let trackClickEvent; // Stream that emits when scrollbar track is hovered\n\n    let trackHoveredEvent; // Set the method used for the pointer events option\n\n    if (this.cmp.pointerEventsMethod === 'viewport') {\n      // Pointer events using the viewport\n      this.viewportTrackClicked = new Subject();\n      this.viewportThumbClicked = new Subject(); // Activate the pointer events of the viewport directive\n\n      this.cmp.viewport.activatePointerEvents(this.cmp.viewportPropagateMouseMove, this.destroyed); // Set streams\n\n      thumbDragEvent = this.viewportThumbClicked;\n      trackClickEvent = this.viewportTrackClicked;\n      trackHoveredEvent = this.cmp.viewport.hovered.pipe( // Check if track is hovered\n      map(e => e ? isWithinBounds(e, this.el.getBoundingClientRect()) : false), distinctUntilChanged(), // Enable / disable text selection\n      tap(hovered => this.document.onselectstart = hovered ? () => false : null));\n      this.cmp.viewport.clicked.pipe(tap(e => {\n        if (e) {\n          if (isWithinBounds(e, this.thumb.clientRect)) {\n            this.viewportThumbClicked.next(e);\n          } else if (isWithinBounds(e, this.track.clientRect)) {\n            this.cmp.setClicked(true);\n            this.viewportTrackClicked.next(e);\n          }\n        } else {\n          this.cmp.setClicked(false);\n        }\n      }), takeUntil(this.destroyed)).subscribe();\n    } else {\n      // Pointer events method is using 'scrollbar'\n      thumbDragEvent = this.thumb.clicked;\n      trackClickEvent = this.track.clicked;\n      trackHoveredEvent = this.hovered;\n    }\n\n    return merge( // Activate scrollbar hovered event\n    trackHoveredEvent.pipe(tap(e => this.setHovered(e))), // Activate scrollbar thumb drag event\n    thumbDragEvent.pipe(switchMap(e => this.thumb.dragged(e))), // Activate scrollbar track click event\n    trackClickEvent.pipe(switchMap(e => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize))));\n  } // Stream that emits when the track element is hovered\n\n\n  get hovered() {\n    const mouseEnter = fromEvent(this.el, 'mouseenter', {\n      passive: true\n    }).pipe(stopPropagation(), map(() => true));\n    const mouseLeave = fromEvent(this.el, 'mouseleave', {\n      passive: true\n    }).pipe(stopPropagation(), map(() => false));\n    return merge(mouseEnter, mouseLeave);\n  }\n\n  ngOnInit() {\n    this.zone.runOutsideAngular(() => {\n      // Activate pointer events on Desktop only\n      if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\n        this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\n      } // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\n\n\n      merge(this.cmp.scrolled, this.cmp.updated).pipe(tap(() => {\n        var _a;\n\n        return (_a = this.thumb) === null || _a === void 0 ? void 0 : _a.update();\n      }), takeUntil(this.destroyed)).subscribe();\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete(); // Clean up viewport streams if used\n\n    if (this.viewportThumbClicked && this.viewportTrackClicked) {\n      this.viewportTrackClicked.complete();\n      this.viewportThumbClicked.complete();\n    }\n  }\n\n}\n\nScrollbar.ɵfac = function Scrollbar_Factory(t) {\n  return new (t || Scrollbar)(i0.ɵɵdirectiveInject(HTMLElement), i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(Document), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nScrollbar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: Scrollbar\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Scrollbar, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: HTMLElement\n    }, {\n      type: NgScrollbarBase\n    }, {\n      type: i2.Platform\n    }, {\n      type: Document\n    }, {\n      type: i0.NgZone\n    }];\n  }, null);\n})();\n\nclass ScrollbarY extends Scrollbar {\n  constructor(el, cmp, platform, document, zone) {\n    super(el.nativeElement, cmp, platform, document, zone);\n    this.cmp = cmp;\n    this.platform = platform;\n    this.document = document;\n    this.zone = zone;\n  }\n\n  get viewportScrollSize() {\n    return this.cmp.viewport.scrollHeight;\n  }\n\n  setHovered(value) {\n    this.cmp.setHovered({\n      verticalHovered: value\n    });\n  }\n\n}\n\nScrollbarY.ɵfac = function ScrollbarY_Factory(t) {\n  return new (t || ScrollbarY)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nScrollbarY.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScrollbarY,\n  selectors: [[\"scrollbar-y\"]],\n  viewQuery: function ScrollbarY_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TrackYDirective, 7);\n      i0.ɵɵviewQuery(ThumbYDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.track = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thumb = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function ScrollbarY_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"scrollbar-control\", true);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 6,\n  consts: [[\"scrollbarTrackY\", \"\"], [\"scrollbarThumbY\", \"\"]],\n  template: function ScrollbarY_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-track \", ctx.cmp.trackClass, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-thumb \", ctx.cmp.thumbClass, \"\");\n    }\n  },\n  directives: [TrackYDirective, ThumbYDirective],\n  styles: [\".ng-scrollbar-wrapper>scrollbar-y.scrollbar-control{width:var(--vertical-scrollbar-total-size)}  .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track{width:var(--vertical-scrollbar-size);height:calc(100% - var(--scrollbar-padding) * 2)}  .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{height:0;width:100%}  .ng-scrollbar-wrapper[verticalHovered=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb,   .ng-scrollbar-wrapper[verticalDragging=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}  .ng-scrollbar-wrapper[deactivated=false]>scrollbar-y.scrollbar-control{top:0;bottom:0}  .ng-scrollbar-wrapper[deactivated=false][dir=ltr]>scrollbar-y.scrollbar-control{right:0;left:unset}  .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertY]>scrollbar-y.scrollbar-control,   .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertAll]>scrollbar-y.scrollbar-control{left:0;right:unset}  .ng-scrollbar-wrapper[deactivated=false][dir=rtl]>scrollbar-y.scrollbar-control{left:0;right:unset}  .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertY]>scrollbar-y.scrollbar-control,   .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertAll]>scrollbar-y.scrollbar-control{left:unset;right:0}  .ng-scrollbar-wrapper[deactivated=false][track=all]>scrollbar-y.scrollbar-control[fit=true]{bottom:var(--scrollbar-total-size);top:0}  .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertX]>scrollbar-y.scrollbar-control[fit=true],   .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertAll]>scrollbar-y.scrollbar-control[fit=true]{top:var(--scrollbar-total-size);bottom:0}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollbarY, [{\n    type: Component,\n    args: [{\n      selector: 'scrollbar-y',\n      host: {\n        '[class.scrollbar-control]': 'true'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbY class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `,\n      styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control{width:var(--vertical-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track{width:var(--vertical-scrollbar-size);height:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{height:0;width:100%}::ng-deep .ng-scrollbar-wrapper[verticalHovered=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-y.scrollbar-control{top:0;bottom:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr]>scrollbar-y.scrollbar-control{right:0;left:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertAll]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertAll]>scrollbar-y.scrollbar-control{left:unset;right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all]>scrollbar-y.scrollbar-control[fit=true]{bottom:var(--scrollbar-total-size);top:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertX]>scrollbar-y.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertAll]>scrollbar-y.scrollbar-control[fit=true]{top:var(--scrollbar-total-size);bottom:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgScrollbarBase\n    }, {\n      type: i2.Platform\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    track: [{\n      type: ViewChild,\n      args: [TrackYDirective, {\n        static: true\n      }]\n    }],\n    thumb: [{\n      type: ViewChild,\n      args: [ThumbYDirective, {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass ScrollbarX extends Scrollbar {\n  constructor(el, cmp, platform, document, zone) {\n    super(el.nativeElement, cmp, platform, document, zone);\n    this.cmp = cmp;\n    this.platform = platform;\n    this.document = document;\n    this.zone = zone;\n  }\n\n  get viewportScrollSize() {\n    return this.cmp.viewport.scrollWidth;\n  }\n\n  setHovered(value) {\n    this.cmp.setHovered({\n      horizontalHovered: value\n    });\n  }\n\n}\n\nScrollbarX.ɵfac = function ScrollbarX_Factory(t) {\n  return new (t || ScrollbarX)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgScrollbarBase), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i0.NgZone));\n};\n\nScrollbarX.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ScrollbarX,\n  selectors: [[\"scrollbar-x\"]],\n  viewQuery: function ScrollbarX_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(TrackXDirective, 7);\n      i0.ɵɵviewQuery(ThumbXDirective, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.track = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.thumb = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function ScrollbarX_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"scrollbar-control\", true);\n    }\n  },\n  features: [i0.ɵɵInheritDefinitionFeature],\n  decls: 2,\n  vars: 6,\n  consts: [[\"scrollbarTrackX\", \"\"], [\"scrollbarThumbX\", \"\"]],\n  template: function ScrollbarX_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-track \", ctx.cmp.trackClass, \"\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵclassMapInterpolate1(\"ng-scrollbar-thumb \", ctx.cmp.thumbClass, \"\");\n    }\n  },\n  directives: [TrackXDirective, ThumbXDirective],\n  styles: [\".ng-scrollbar-wrapper>scrollbar-x.scrollbar-control{height:var(--horizontal-scrollbar-total-size)}  .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track{height:var(--horizontal-scrollbar-size);width:calc(100% - var(--scrollbar-padding) * 2)}  .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{width:0;height:100%}  .ng-scrollbar-wrapper[horizontalHovered=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb,   .ng-scrollbar-wrapper[horizontalDragging=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}  .ng-scrollbar-wrapper[position=invertX]>scrollbar-x.scrollbar-control,   .ng-scrollbar-wrapper[position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}  .ng-scrollbar-wrapper[deactivated=false]>scrollbar-x.scrollbar-control{left:0;right:0;bottom:0;top:unset}  .ng-scrollbar-wrapper[deactivated=false][position=invertX]>scrollbar-x.scrollbar-control,   .ng-scrollbar-wrapper[deactivated=false][position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}  .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}  .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertY]>scrollbar-x.scrollbar-control[fit=true],   .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}  .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}  .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertY]>scrollbar-x.scrollbar-control[fit=true],   .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ScrollbarX, [{\n    type: Component,\n    args: [{\n      selector: 'scrollbar-x',\n      host: {\n        '[class.scrollbar-control]': 'true'\n      },\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: `\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\n      <div scrollbarThumbX class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\n    </div>\n  `,\n      styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control{height:var(--horizontal-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track{height:var(--horizontal-scrollbar-size);width:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{width:0;height:100%}::ng-deep .ng-scrollbar-wrapper[horizontalHovered=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-x.scrollbar-control{left:0;right:0;bottom:0;top:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgScrollbarBase\n    }, {\n      type: i2.Platform\n    }, {\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: i0.NgZone\n    }];\n  }, {\n    track: [{\n      type: ViewChild,\n      args: [TrackXDirective, {\n        static: true\n      }]\n    }],\n    thumb: [{\n      type: ViewChild,\n      args: [ThumbXDirective, {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass NgAttr {\n  constructor(el) {\n    this.el = el;\n  }\n\n  set ngAttr(attrs) {\n    for (const [key, value] of Object.entries(attrs)) {\n      this.el.nativeElement.setAttribute(key, value);\n    }\n  }\n\n}\n\nNgAttr.ɵfac = function NgAttr_Factory(t) {\n  return new (t || NgAttr)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgAttr.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NgAttr,\n  selectors: [[\"\", \"ngAttr\", \"\"]],\n  inputs: {\n    ngAttr: \"ngAttr\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgAttr, [{\n    type: Directive,\n    args: [{\n      selector: '[ngAttr]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    ngAttr: [{\n      type: Input\n    }]\n  });\n})();\n\nclass ResizeSensor {\n  constructor(zone, platform, scrollbar) {\n    this.zone = zone;\n    this.platform = platform;\n    this.scrollbar = scrollbar;\n    this._disabled = false;\n    this._currentSubscription = null;\n    this.event = new EventEmitter();\n\n    if (!scrollbar) {\n      throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\n    }\n  }\n  /** Debounce interval for emitting the changes. */\n\n\n  get debounce() {\n    return this._debounce;\n  }\n\n  set debounce(value) {\n    this._debounce = coerceNumberProperty(value);\n\n    this._subscribe();\n  }\n  /** Whether ResizeObserver is disabled. */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    this._disabled ? this._unsubscribe() : this._subscribe();\n  }\n\n  ngAfterContentInit() {\n    if (!this._currentSubscription && !this._disabled) {\n      this._subscribe();\n    }\n  }\n\n  ngOnDestroy() {\n    this._unsubscribe();\n  }\n\n  _subscribe() {\n    this._unsubscribe();\n\n    if (this.platform.isBrowser) {\n      const stream = new Observable(observer => {\n        this._resizeObserver = new ResizeObserver(e => observer.next(e));\n\n        this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\n\n        if (this.scrollbar.viewport.contentWrapperElement) {\n          this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\n        }\n      });\n      this.zone.runOutsideAngular(() => {\n        this._currentSubscription = (this._debounce ? stream.pipe(debounceTime(this._debounce)) : stream).subscribe(this.event);\n      });\n    }\n  }\n\n  _unsubscribe() {\n    var _a, _b;\n\n    (_a = this._resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n    (_b = this._currentSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\n  }\n\n}\n\nResizeSensor.ɵfac = function ResizeSensor_Factory(t) {\n  return new (t || ResizeSensor)(i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(NgScrollbarBase));\n};\n\nResizeSensor.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: ResizeSensor,\n  selectors: [[\"\", \"resizeSensor\", \"\"]],\n  inputs: {\n    debounce: [\"sensorDebounce\", \"debounce\"],\n    disabled: [\"sensorDisabled\", \"disabled\"]\n  },\n  outputs: {\n    event: \"resizeSensor\"\n  }\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ResizeSensor, [{\n    type: Directive,\n    args: [{\n      selector: '[resizeSensor]'\n    }]\n  }], function () {\n    return [{\n      type: i0.NgZone\n    }, {\n      type: i2.Platform\n    }, {\n      type: NgScrollbarBase\n    }];\n  }, {\n    debounce: [{\n      type: Input,\n      args: ['sensorDebounce']\n    }],\n    disabled: [{\n      type: Input,\n      args: ['sensorDisabled']\n    }],\n    event: [{\n      type: Output,\n      args: ['resizeSensor']\n    }]\n  });\n})();\n\nclass NativeScrollbarSizeFactory {\n  constructor(document, manager, platform) {\n    this.document = document;\n    this.manager = manager;\n    this.platform = platform;\n    this._scrollbarSize = new BehaviorSubject(this.getNativeScrollbarSize());\n    this.scrollbarSize = this._scrollbarSize.asObservable(); // Calculate native scrollbar size on window resize event, because the size changes if use zoomed in/out\n\n    if (platform.isBrowser) {\n      fromEvent(this.document.defaultView, 'resize', {\n        passive: true\n      }).pipe(debounceTime(this.manager.globalOptions.windowResizeDebounce), map(() => this.getNativeScrollbarSize()), distinctUntilChanged(), tap(size => this._scrollbarSize.next(size))).subscribe();\n    }\n  }\n  /**\r\n   * Get native scrollbar size\r\n   */\n\n\n  getNativeScrollbarSize() {\n    // Avoid executing browser code in server side rendering\n    if (!this.platform.isBrowser) {\n      return 0;\n    } // Hide iOS browsers native scrollbar\n\n\n    if (this.platform.IOS) {\n      return 6;\n    }\n\n    const box = this.document.createElement('div');\n    box.className = 'ng-scrollbar-measure';\n    box.style.left = '0px';\n    box.style.overflow = 'scroll';\n    box.style.position = 'fixed';\n    box.style.top = '-9999px';\n    this.document.body.appendChild(box);\n    const size = box.getBoundingClientRect().right;\n    this.document.body.removeChild(box);\n    return size;\n  }\n\n}\n\nNativeScrollbarSizeFactory.ɵfac = function NativeScrollbarSizeFactory_Factory(t) {\n  return new (t || NativeScrollbarSizeFactory)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(ScrollbarManager), i0.ɵɵinject(i2.Platform));\n};\n\nNativeScrollbarSizeFactory.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NativeScrollbarSizeFactory,\n  factory: NativeScrollbarSizeFactory.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeScrollbarSizeFactory, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: Document,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }, {\n      type: ScrollbarManager\n    }, {\n      type: i2.Platform\n    }];\n  }, null);\n})();\n\nclass HideNativeScrollbar {\n  constructor(el, renderer, hideNativeScrollbar) {\n    this.renderer = renderer;\n    this.hideNativeScrollbar = hideNativeScrollbar;\n    this._subscriber = Subscription.EMPTY;\n    this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe(size => {\n      this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${size}px`, RendererStyleFlags2.DashCase);\n    });\n  }\n\n  ngOnDestroy() {\n    this._subscriber.unsubscribe();\n  }\n\n}\n\nHideNativeScrollbar.ɵfac = function HideNativeScrollbar_Factory(t) {\n  return new (t || HideNativeScrollbar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(NativeScrollbarSizeFactory));\n};\n\nHideNativeScrollbar.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: HideNativeScrollbar,\n  selectors: [[\"\", \"hideNativeScrollbar\", \"\"]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(HideNativeScrollbar, [{\n    type: Directive,\n    args: [{\n      selector: '[hideNativeScrollbar]'\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: NativeScrollbarSizeFactory\n    }];\n  }, null);\n})();\n\nclass NgScrollbar {\n  constructor(el, zone, changeDetectorRef, dir, smoothScroll, manager) {\n    this.el = el;\n    this.zone = zone;\n    this.changeDetectorRef = changeDetectorRef;\n    this.dir = dir;\n    this.smoothScroll = smoothScroll;\n    this.manager = manager;\n    this._disabled = false;\n    this._sensorDisabled = this.manager.globalOptions.sensorDisabled;\n    this._pointerEventsDisabled = this.manager.globalOptions.pointerEventsDisabled;\n    this._autoHeightDisabled = this.manager.globalOptions.autoHeightDisabled;\n    this._autoWidthDisabled = this.manager.globalOptions.autoWidthDisabled;\n    this._viewportPropagateMouseMove = this.manager.globalOptions.viewportPropagateMouseMove;\n    /** A class forwarded to scrollable viewport element */\n\n    this.viewClass = this.manager.globalOptions.viewClass;\n    /** A class forwarded to the scrollbar track element */\n\n    this.trackClass = this.manager.globalOptions.trackClass;\n    /** A class forwarded to the scrollbar thumb element */\n\n    this.thumbClass = this.manager.globalOptions.thumbClass;\n    /** Minimum scrollbar thumb size */\n\n    this.minThumbSize = this.manager.globalOptions.minThumbSize;\n    /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\n\n    this.trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;\n    /**\r\n     * Sets the pointer events method\r\n     * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n     * Use scrollbar pointer events to handle dragging and track click\r\n     */\n\n    this.pointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\n    /**\r\n     * Sets the supported scroll track of the viewport, there are 3 options:\r\n     *\r\n     * - `vertical` Use both vertical and horizontal scrollbar\r\n     * - `horizontal` Use both vertical and horizontal scrollbar\r\n     * - `all` Use both vertical and horizontal scrollbar\r\n     */\n\n    this.track = this.manager.globalOptions.track;\n    /**\r\n     * When to show the scrollbar, and there are 3 options:\r\n     *\r\n     * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n     * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n     * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n     */\n\n    this.visibility = this.manager.globalOptions.visibility;\n    /**\r\n     *  Sets the appearance of the scrollbar, there are 2 options:\r\n     *\r\n     * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n     * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n     */\n\n    this.appearance = this.manager.globalOptions.appearance;\n    /**\r\n     * Sets the position of each scrollbar, there are 4 options:\r\n     *\r\n     * - `native` (Default) Use the default position like in native scrollbar.\r\n     * - `invertY` Inverts vertical scrollbar position\r\n     * - `invertX` Inverts Horizontal scrollbar position\r\n     * - `invertAll` Inverts both scrollbar positions\r\n     */\n\n    this.position = this.manager.globalOptions.position;\n    /** Debounce interval for detecting changes via ResizeObserver */\n\n    this.sensorDebounce = this.manager.globalOptions.sensorDebounce;\n    /** Scroll Audit Time */\n\n    this.scrollAuditTime = this.manager.globalOptions.scrollAuditTime;\n    /** Steam that emits when scrollbar is updated */\n\n    this.updated = new EventEmitter();\n    /** Set of attributes added on the scrollbar wrapper */\n\n    this.state = {};\n    /** Stream that destroys components' observables */\n\n    this.destroyed = new Subject();\n  }\n  /** Disable custom scrollbar and switch back to native scrollbar */\n\n\n  get disabled() {\n    return this._disabled;\n  }\n\n  set disabled(disabled) {\n    this._disabled = coerceBooleanProperty(disabled);\n  }\n  /** Whether ResizeObserver is disabled */\n\n\n  get sensorDisabled() {\n    return this._sensorDisabled;\n  }\n\n  set sensorDisabled(disabled) {\n    this._sensorDisabled = coerceBooleanProperty(disabled);\n  }\n  /** A flag used to enable/disable the scrollbar thumb dragged event */\n\n\n  get pointerEventsDisabled() {\n    return this._pointerEventsDisabled;\n  }\n\n  set pointerEventsDisabled(disabled) {\n    this._pointerEventsDisabled = coerceBooleanProperty(disabled);\n  }\n  /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\n\n\n  get viewportPropagateMouseMove() {\n    return this._viewportPropagateMouseMove;\n  }\n\n  set viewportPropagateMouseMove(disabled) {\n    this._viewportPropagateMouseMove = coerceBooleanProperty(disabled);\n  }\n  /** Disable auto-height */\n\n\n  get autoHeightDisabled() {\n    return this._autoHeightDisabled;\n  }\n\n  set autoHeightDisabled(disabled) {\n    this._autoHeightDisabled = coerceBooleanProperty(disabled);\n  }\n  /** Disable auto-width */\n\n\n  get autoWidthDisabled() {\n    return this._autoWidthDisabled;\n  }\n\n  set autoWidthDisabled(disabled) {\n    this._autoWidthDisabled = coerceBooleanProperty(disabled);\n  }\n\n  get nativeElement() {\n    return this.el.nativeElement;\n  }\n  /**\r\n   * Update local state with each change detection\r\n   */\n\n\n  updateState() {\n    let verticalUsed = false;\n    let horizontalUsed = false;\n    let isVerticallyScrollable = false;\n    let isHorizontallyScrollable = false; // Check if vertical scrollbar should be displayed\n\n    if (this.track === 'all' || this.track === 'vertical') {\n      isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\n      verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\n    } // Check if horizontal scrollbar should be displayed\n\n\n    if (this.track === 'all' || this.track === 'horizontal') {\n      isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\n      horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\n    } // Update inner wrapper attributes\n\n\n    this.setState({\n      position: this.position,\n      track: this.track,\n      appearance: this.appearance,\n      visibility: this.visibility,\n      deactivated: this.disabled,\n      dir: this.dir.value,\n      pointerEventsMethod: this.pointerEventsMethod,\n      verticalUsed,\n      horizontalUsed,\n      isVerticallyScrollable,\n      isHorizontallyScrollable\n    });\n  }\n\n  setState(state) {\n    this.state = Object.assign(Object.assign({}, this.state), state);\n    this.changeDetectorRef.detectChanges();\n  }\n\n  getScrolledByDirection(property) {\n    let event;\n    return this.scrolled.pipe(tap(e => event = e), pluck('target', property), pairwise(), filter(([prev, curr]) => prev !== curr), map(() => event));\n  }\n  /**\r\n   * Set hovered state if a scrollbar is being hovered\r\n   */\n\n\n  setHovered(hovered) {\n    this.zone.run(() => this.setState(Object.assign({}, hovered)));\n  }\n  /**\r\n   * Set dragging state if a scrollbar is being dragged\r\n   */\n\n\n  setDragging(dragging) {\n    this.zone.run(() => this.setState(Object.assign({}, dragging)));\n  }\n  /**\r\n   * Set clicked state if a scrollbar track is being click\r\n   */\n\n\n  setClicked(scrollbarClicked) {\n    this.zone.run(() => this.setState({\n      scrollbarClicked\n    }));\n  }\n\n  ngOnInit() {\n    // Set the viewport based on user choice\n    this.zone.runOutsideAngular(() => {\n      if (this.customViewPort) {\n        this.viewport = this.customViewPort;\n        this.defaultViewPort.setAsWrapper();\n      } else {\n        this.viewport = this.defaultViewPort;\n      } // Activate the selected viewport\n\n\n      this.viewport.setAsViewport(this.viewClass);\n      let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', {\n        passive: true\n      }); // Throttle scroll event if 'scrollAuditTime' is set\n\n      scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream; // Initialize scroll streams\n\n      this.scrolled = scrollStream.pipe(takeUntil(this.destroyed));\n      this.verticalScrolled = this.getScrolledByDirection('scrollTop');\n      this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\n    });\n  }\n\n  ngOnChanges(changes) {\n    // Update only when the viewport is initialized\n    if (this.viewport) {\n      this.update();\n    }\n  }\n\n  ngAfterViewInit() {\n    // Initial update\n    this.update(); // Update on dir changes\n\n    this.dir.change.pipe(tap(() => this.update()), takeUntil(this.destroyed)).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n    this.destroyed.complete();\n  }\n  /**\r\n   * Update local state and the internal scrollbar controls\r\n   */\n\n\n  update() {\n    if (!this.autoHeightDisabled) {\n      this.updateHeight();\n    }\n\n    if (!this.autoWidthDisabled) {\n      this.updateWidth();\n    } // Re-evaluate the state after setting height or width\n\n\n    this.updateState();\n    this.updated.next();\n  }\n  /**\r\n   * Smooth scroll functions\r\n   */\n\n\n  scrollTo(options) {\n    return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\n  }\n  /**\r\n   * Scroll to element by reference or selector\r\n   */\n\n\n  scrollToElement(target, options) {\n    return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\n  }\n\n  updateHeight() {\n    // Auto-height: Set component height to content height\n    if (this.appearance === 'standard' && this.scrollbarX) {\n      // if scrollbar-x is displayed in standard mode\n      this.nativeElement.style.height = `${this.viewport.contentHeight + this.scrollbarX.nativeElement.clientHeight}px`;\n    } else {\n      this.nativeElement.style.height = `${this.viewport.contentHeight}px`;\n    }\n  }\n\n  updateWidth() {\n    // Auto-width: Set component minWidth to content width\n    if (this.appearance === 'standard' && this.scrollbarY) {\n      // if scrollbar-y is displayed in standard mode\n      this.nativeElement.style.width = `${this.viewport.contentWidth + this.scrollbarY.nativeElement.clientWidth}px`;\n    } else {\n      this.nativeElement.style.width = `${this.viewport.contentWidth}px`;\n    }\n  }\n\n}\n\nNgScrollbar.ɵfac = function NgScrollbar_Factory(t) {\n  return new (t || NgScrollbar)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i3.Directionality), i0.ɵɵdirectiveInject(i2$1.SmoothScrollManager), i0.ɵɵdirectiveInject(ScrollbarManager));\n};\n\nNgScrollbar.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgScrollbar,\n  selectors: [[\"ng-scrollbar\"]],\n  contentQueries: function NgScrollbar_ContentQueries(rf, ctx, dirIndex) {\n    if (rf & 1) {\n      i0.ɵɵcontentQuery(dirIndex, ScrollViewport, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customViewPort = _t.first);\n    }\n  },\n  viewQuery: function NgScrollbar_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      i0.ɵɵviewQuery(_c1, 5, ElementRef);\n      i0.ɵɵviewQuery(ScrollViewport, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollbarY = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scrollbarX = _t.first);\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultViewPort = _t.first);\n    }\n  },\n  hostVars: 2,\n  hostBindings: function NgScrollbar_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"ng-scrollbar\", true);\n    }\n  },\n  inputs: {\n    disabled: \"disabled\",\n    sensorDisabled: \"sensorDisabled\",\n    pointerEventsDisabled: \"pointerEventsDisabled\",\n    viewportPropagateMouseMove: \"viewportPropagateMouseMove\",\n    autoHeightDisabled: \"autoHeightDisabled\",\n    autoWidthDisabled: \"autoWidthDisabled\",\n    viewClass: \"viewClass\",\n    trackClass: \"trackClass\",\n    thumbClass: \"thumbClass\",\n    minThumbSize: \"minThumbSize\",\n    trackClickScrollDuration: \"trackClickScrollDuration\",\n    pointerEventsMethod: \"pointerEventsMethod\",\n    track: \"track\",\n    visibility: \"visibility\",\n    appearance: \"appearance\",\n    position: \"position\",\n    sensorDebounce: \"sensorDebounce\",\n    scrollAuditTime: \"scrollAuditTime\"\n  },\n  outputs: {\n    updated: \"updated\"\n  },\n  exportAs: [\"ngScrollbar\"],\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NgScrollbarBase,\n    useExisting: NgScrollbar\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c2,\n  decls: 6,\n  vars: 4,\n  consts: [[1, \"ng-scrollbar-wrapper\", 3, \"ngAttr\"], [1, \"ng-scroll-viewport-wrapper\", 3, \"sensorDebounce\", \"sensorDisabled\", \"resizeSensor\"], [\"scrollViewport\", \"\", \"hideNativeScrollbar\", \"\"], [4, \"ngIf\"], [\"scrollbarX\", \"\"], [\"scrollbarY\", \"\"]],\n  template: function NgScrollbar_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵlistener(\"resizeSensor\", function NgScrollbar_Template_div_resizeSensor_1_listener() {\n        return ctx.update();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\");\n      i0.ɵɵprojection(4);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(5, NgScrollbar_ng_container_5_Template, 3, 2, \"ng-container\", 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngAttr\", ctx.state);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"sensorDebounce\", ctx.sensorDebounce)(\"sensorDisabled\", ctx.sensorDisabled);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.disabled);\n    }\n  },\n  directives: [ScrollbarX, ScrollbarY, NgAttr, ResizeSensor, ScrollViewport, HideNativeScrollbar, i9.NgIf],\n  styles: [\".ng-scrollbar-measure{scrollbar-width:none;-ms-overflow-style:none}  .ng-scrollbar-measure::-webkit-scrollbar{display:none}[_nghost-%COMP%]{--scrollbar-border-radius: 7px;--scrollbar-padding: 4px;--scrollbar-track-color: transparent;--scrollbar-thumb-color: rgba(0, 0, 0, .2);--scrollbar-thumb-hover-color: var(--scrollbar-thumb-color);--scrollbar-size: 5px;--scrollbar-hover-size: var(--scrollbar-size);--scrollbar-overscroll-behavior: initial;--scrollbar-transition-duration: .4s;--scrollbar-transition-delay: .8s;--scrollbar-thumb-transition: height ease-out .15s, width ease-out .15s;--scrollbar-track-transition: height ease-out .15s, width ease-out .15s;display:block;position:relative;height:100%;max-height:100%;max-width:100%;box-sizing:content-box!important}[_nghost-%COMP%] > .ng-scrollbar-wrapper[_ngcontent-%COMP%]{--scrollbar-total-size: calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size: var(--scrollbar-size);--horizontal-scrollbar-size: var(--scrollbar-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalHovered=true][_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalDragging=true][_ngcontent-%COMP%]{--vertical-scrollbar-size: var(--scrollbar-hover-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}[_nghost-%COMP%] > .ng-scrollbar-wrapper[horizontalHovered=true][_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[horizontalDragging=true][_ngcontent-%COMP%]{--horizontal-scrollbar-size: var(--scrollbar-hover-size);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{left:0;right:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{left:var(--scrollbar-total-size);right:0}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{left:var(--scrollbar-total-size);right:0}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport, [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{left:0;right:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport, [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{top:0;bottom:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{top:var(--scrollbar-total-size);bottom:0}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport, [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{scrollbar-width:none;-ms-overflow-style:none}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%]::-webkit-scrollbar, [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport::-webkit-scrollbar{display:none}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-native-scrollbar-hider[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-native-scrollbar-hider[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-native-scrollbar-hider[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][visibility=hover][_ngcontent-%COMP%] > .scrollbar-control[_ngcontent-%COMP%]{opacity:0;transition-property:opacity;transition-duration:var(--scrollbar-transition-duration);transition-delay:var(--scrollbar-transition-delay)}[_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][visibility=hover][_ngcontent-%COMP%]:hover > .scrollbar-control[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][visibility=hover][_ngcontent-%COMP%]:active > .scrollbar-control[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[deactivated=false][visibility=hover][_ngcontent-%COMP%]:focus > .scrollbar-control[_ngcontent-%COMP%]{opacity:1;transition-duration:var(--scrollbar-transition-duration);transition-delay:0ms}[_nghost-%COMP%] > .ng-scrollbar-wrapper[horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}[_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}[_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > .ng-scroll-viewport[_ngcontent-%COMP%], [_nghost-%COMP%] > .ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true][_ngcontent-%COMP%] > .ng-scroll-viewport-wrapper[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%] >   .ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper[_ngcontent-%COMP%]{overflow:hidden}.ng-scroll-viewport[_ngcontent-%COMP%]{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position;overscroll-behavior:var(--scrollbar-overscroll-behavior)}  .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scrollbar-wrapper[_ngcontent-%COMP%], .ng-scroll-viewport-wrapper[_ngcontent-%COMP%], .ng-scroll-layer[_ngcontent-%COMP%],   .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}\", \".ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}  .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,   .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>  .ng-scroll-viewport,   .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,   .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>  .ng-scroll-viewport,   .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,   .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>  .ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;user-select:none}  .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}  .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}  .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}  .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}\"],\n  changeDetection: 0\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgScrollbar, [{\n    type: Component,\n    args: [{\n      selector: 'ng-scrollbar',\n      exportAs: 'ngScrollbar',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.ng-scrollbar]': 'true'\n      },\n      providers: [{\n        provide: NgScrollbarBase,\n        useExisting: NgScrollbar\n      }],\n      template: \"<div class=\\\"ng-scrollbar-wrapper\\\" [ngAttr]=\\\"state\\\">\\r\\n  <div class=\\\"ng-scroll-viewport-wrapper\\\"\\r\\n       (resizeSensor)=\\\"update()\\\"\\r\\n       [sensorDebounce]=\\\"sensorDebounce\\\"\\r\\n       [sensorDisabled]=\\\"sensorDisabled\\\">\\r\\n    <div scrollViewport\\r\\n         hideNativeScrollbar>\\r\\n      <div>\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-container *ngIf=\\\"!disabled\\\">\\r\\n    <scrollbar-x #scrollbarX\\r\\n                 *ngIf=\\\"state.horizontalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isHorizontallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.verticalUsed\\\">\\r\\n    </scrollbar-x>\\r\\n    <scrollbar-y #scrollbarY\\r\\n                 *ngIf=\\\"state.verticalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isVerticallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.horizontalUsed\\\">\\r\\n    </scrollbar-y>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n\",\n      styles: [\"::ng-deep .ng-scrollbar-measure{scrollbar-width:none;-ms-overflow-style:none}::ng-deep .ng-scrollbar-measure::-webkit-scrollbar{display:none}:host{--scrollbar-border-radius: 7px;--scrollbar-padding: 4px;--scrollbar-track-color: transparent;--scrollbar-thumb-color: rgba(0, 0, 0, .2);--scrollbar-thumb-hover-color: var(--scrollbar-thumb-color);--scrollbar-size: 5px;--scrollbar-hover-size: var(--scrollbar-size);--scrollbar-overscroll-behavior: initial;--scrollbar-transition-duration: .4s;--scrollbar-transition-delay: .8s;--scrollbar-thumb-transition: height ease-out .15s, width ease-out .15s;--scrollbar-track-transition: height ease-out .15s, width ease-out .15s;display:block;position:relative;height:100%;max-height:100%;max-width:100%;box-sizing:content-box!important}:host>.ng-scrollbar-wrapper{--scrollbar-total-size: calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size: var(--scrollbar-size);--horizontal-scrollbar-size: var(--scrollbar-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}:host>.ng-scrollbar-wrapper[verticalHovered=true],:host>.ng-scrollbar-wrapper[verticalDragging=true]{--vertical-scrollbar-size: var(--scrollbar-hover-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[horizontalHovered=true],:host>.ng-scrollbar-wrapper[horizontalDragging=true]{--horizontal-scrollbar-size: var(--scrollbar-hover-size);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:0;bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:var(--scrollbar-total-size);bottom:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{scrollbar-width:none;-ms-overflow-style:none}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport::-webkit-scrollbar,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport::-webkit-scrollbar{display:none}:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]>.scrollbar-control{opacity:0;transition-property:opacity;transition-duration:var(--scrollbar-transition-duration);transition-delay:var(--scrollbar-transition-delay)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:hover>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:active>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:focus>.scrollbar-control{opacity:1;transition-duration:var(--scrollbar-transition-duration);transition-delay:0ms}:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper{overflow:hidden}.ng-scroll-viewport{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position;overscroll-behavior:var(--scrollbar-overscroll-behavior)}::ng-deep .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scrollbar-wrapper,.ng-scroll-viewport-wrapper,.ng-scroll-layer,::ng-deep .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}\\n\", \"::ng-deep .ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;user-select:none}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}::ng-deep .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}::ng-deep .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.NgZone\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i3.Directionality\n    }, {\n      type: i2$1.SmoothScrollManager\n    }, {\n      type: ScrollbarManager\n    }];\n  }, {\n    disabled: [{\n      type: Input\n    }],\n    sensorDisabled: [{\n      type: Input\n    }],\n    pointerEventsDisabled: [{\n      type: Input\n    }],\n    viewportPropagateMouseMove: [{\n      type: Input\n    }],\n    autoHeightDisabled: [{\n      type: Input\n    }],\n    autoWidthDisabled: [{\n      type: Input\n    }],\n    viewClass: [{\n      type: Input\n    }],\n    trackClass: [{\n      type: Input\n    }],\n    thumbClass: [{\n      type: Input\n    }],\n    minThumbSize: [{\n      type: Input\n    }],\n    trackClickScrollDuration: [{\n      type: Input\n    }],\n    pointerEventsMethod: [{\n      type: Input\n    }],\n    track: [{\n      type: Input\n    }],\n    visibility: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }],\n    position: [{\n      type: Input\n    }],\n    sensorDebounce: [{\n      type: Input\n    }],\n    scrollAuditTime: [{\n      type: Input\n    }],\n    updated: [{\n      type: Output\n    }],\n    scrollbarY: [{\n      type: ViewChild,\n      args: ['scrollbarY', {\n        read: ElementRef\n      }]\n    }],\n    scrollbarX: [{\n      type: ViewChild,\n      args: ['scrollbarX', {\n        read: ElementRef\n      }]\n    }],\n    defaultViewPort: [{\n      type: ViewChild,\n      args: [ScrollViewport, {\n        static: true\n      }]\n    }],\n    customViewPort: [{\n      type: ContentChild,\n      args: [ScrollViewport, {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass NgScrollbarModule {\n  static withConfig(options) {\n    return {\n      ngModule: NgScrollbarModule,\n      providers: [{\n        provide: NG_SCROLLBAR_OPTIONS,\n        useValue: options\n      }]\n    };\n  }\n\n}\n\nNgScrollbarModule.ɵfac = function NgScrollbarModule_Factory(t) {\n  return new (t || NgScrollbarModule)();\n};\n\nNgScrollbarModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgScrollbarModule\n});\nNgScrollbarModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, BidiModule, PortalModule, PlatformModule, SmoothScrollModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgScrollbarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, BidiModule, PortalModule, PlatformModule, SmoothScrollModule],\n      declarations: [NgScrollbar, ScrollViewport, HideNativeScrollbar, NgAttr, ResizeSensor, ThumbYDirective, ThumbXDirective, TrackXDirective, TrackYDirective, ScrollbarY, ScrollbarX],\n      exports: [NgScrollbar, ScrollViewport]\n    }]\n  }], null, null);\n})();\n/*\r\n * Public API Surface of ngx-scrollbar\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\n\nexport { NG_SCROLLBAR_OPTIONS, NgScrollbar, NgScrollbarModule, ScrollViewport, ScrollbarManager };","map":{"version":3,"sources":["/Users/ianfe/WebstormProjects/CoccoPanel/node_modules/ngx-scrollbar/fesm2015/ngx-scrollbar.mjs"],"names":["i0","Directive","InjectionToken","Injectable","Optional","Inject","Output","Component","ChangeDetectionStrategy","ViewChild","Input","EventEmitter","RendererStyleFlags2","ElementRef","ContentChild","NgModule","i9","DOCUMENT","CommonModule","i3","BidiModule","PortalModule","i2","getRtlScrollAxisType","PlatformModule","i2$1","SmoothScrollModule","coerceNumberProperty","coerceBooleanProperty","Observable","fromEvent","merge","EMPTY","of","Subject","animationFrameScheduler","BehaviorSubject","Subscription","tap","map","takeUntil","switchMap","pluck","distinctUntilChanged","mergeMap","debounceTime","pairwise","filter","auditTime","preventSelection","doc","onselectstart","enableSelection","stopPropagation","e","isWithinBounds","rect","clientX","left","width","clientY","top","height","ScrollViewport","constructor","viewPort","nativeElement","clientHeight","clientWidth","scrollHeight","scrollWidth","scrollTop","scrollLeft","scrollMaxX","scrollMaxY","contentHeight","_a","contentWrapperElement","contentWidth","activatePointerEvents","propagate","destroyed","hovered","subscriber","mouseMoveStream","passive","mouseMove","pipe","mouseLeave","next","subscribe","clicked","mouseDown","mouseUp","setAsWrapper","className","firstElementChild","setAsViewport","customClassName","classList","add","scrollYTo","value","scrollXTo","ɵfac","ɵdir","type","args","selector","NgScrollbarBase","NG_SCROLLBAR_OPTIONS","defaultOptions","viewClass","trackClass","thumbClass","track","appearance","visibility","position","pointerEventsMethod","trackClickScrollDuration","minThumbSize","windowResizeDebounce","sensorDebounce","scrollAuditTime","viewportPropagateMouseMove","autoHeightDisabled","autoWidthDisabled","sensorDisabled","pointerEventsDisabled","ScrollbarManager","options","globalOptions","Object","assign","rtlScrollAxisType","ɵprov","providedIn","undefined","decorators","TrackAdapter","cmp","trackElement","document","mouseup","clientRect","getBoundingClientRect","onTrackClicked","thumbSize","scrollSize","pageProperty","pageOffset","clickOffset","offset","ratio","size","scrollTo","mapToScrollToOption","duration","HTMLElement","Document","TrackXDirective","TrackYDirective","ThumbAdapter","thumbElement","_dragging","dragging","trackMax","update","calculateThumbSize","viewportScrollSize","calculateThumbPosition","viewportScrollOffset","viewportScrollMax","schedule","updateStyles","handleDirection","dragged","event","trackMaxStart","scrollMaxStart","dragStart","setDragging","capture","dragEnd","dragStartOffset","mouseDownOffset","clientProperty","mouseOffset","handleDrag","trackSize","contentSize","scrollbarRatio","Math","max","scrollPosition","scrollMax","ThumbXDirective","element","dir","viewport","defaultView","pageXOffset","style","transform","manager","horizontalDragging","Directionality","ThumbYDirective","pageYOffset","verticalDragging","Scrollbar","el","platform","zone","thumbDragEvent","trackClickEvent","trackHoveredEvent","viewportTrackClicked","viewportThumbClicked","thumb","setClicked","setHovered","mouseEnter","ngOnInit","runOutsideAngular","IOS","ANDROID","scrolled","updated","ngOnDestroy","complete","Platform","NgZone","ScrollbarY","verticalHovered","ɵcmp","host","changeDetection","OnPush","template","styles","static","ScrollbarX","horizontalHovered","NgAttr","ngAttr","attrs","key","entries","setAttribute","ResizeSensor","scrollbar","_disabled","_currentSubscription","Error","debounce","_debounce","_subscribe","disabled","_unsubscribe","ngAfterContentInit","isBrowser","stream","observer","_resizeObserver","ResizeObserver","observe","_b","disconnect","unsubscribe","NativeScrollbarSizeFactory","_scrollbarSize","getNativeScrollbarSize","scrollbarSize","asObservable","box","createElement","overflow","body","appendChild","right","removeChild","HideNativeScrollbar","renderer","hideNativeScrollbar","_subscriber","setStyle","DashCase","Renderer2","NgScrollbar","changeDetectorRef","smoothScroll","_sensorDisabled","_pointerEventsDisabled","_autoHeightDisabled","_autoWidthDisabled","_viewportPropagateMouseMove","state","updateState","verticalUsed","horizontalUsed","isVerticallyScrollable","isHorizontallyScrollable","setState","deactivated","detectChanges","getScrolledByDirection","property","prev","curr","run","scrollbarClicked","customViewPort","defaultViewPort","scrollStream","verticalScrolled","horizontalScrolled","ngOnChanges","changes","ngAfterViewInit","change","updateHeight","updateWidth","scrollToElement","target","scrollbarX","scrollbarY","ChangeDetectorRef","SmoothScrollManager","provide","useExisting","NgIf","exportAs","providers","read","NgScrollbarModule","withConfig","ngModule","useValue","ɵmod","ɵinj","imports","declarations","exports"],"mappings":"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","sourcesContent":["import * as i0 from '@angular/core';\nimport { Directive, InjectionToken, Injectable, Optional, Inject, Output, Component, ChangeDetectionStrategy, ViewChild, Input, EventEmitter, RendererStyleFlags2, ElementRef, ContentChild, NgModule } from '@angular/core';\nimport * as i9 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i3 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { PortalModule } from '@angular/cdk/portal';\nimport * as i2 from '@angular/cdk/platform';\nimport { getRtlScrollAxisType, PlatformModule } from '@angular/cdk/platform';\nimport * as i2$1 from 'ngx-scrollbar/smooth-scroll';\nimport { SmoothScrollModule } from 'ngx-scrollbar/smooth-scroll';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Observable, fromEvent, merge, EMPTY, of, Subject, animationFrameScheduler, BehaviorSubject, Subscription } from 'rxjs';\nimport { tap, map, takeUntil, switchMap, pluck, distinctUntilChanged, mergeMap, debounceTime, pairwise, filter, auditTime } from 'rxjs/operators';\n\nfunction preventSelection(doc) {\r\n    return tap(() => {\r\n        doc.onselectstart = () => false;\r\n    });\r\n}\r\nfunction enableSelection(doc) {\r\n    return tap(() => {\r\n        doc.onselectstart = null;\r\n    });\r\n}\r\nfunction stopPropagation() {\r\n    return tap((e) => e.stopPropagation());\r\n}\r\n/**\r\n * Check if pointer is within scrollbar bounds\r\n */\r\nfunction isWithinBounds(e, rect) {\r\n    return (e.clientX >= rect.left &&\r\n        e.clientX <= rect.left + rect.width &&\r\n        e.clientY >= rect.top &&\r\n        e.clientY <= rect.top + rect.height);\r\n}\n\nclass ScrollViewport {\r\n    constructor(viewPort) {\r\n        this.viewPort = viewPort;\r\n        this.nativeElement = viewPort.nativeElement;\r\n    }\r\n    // Get viewport size, clientHeight or clientWidth\r\n    get clientHeight() {\r\n        return this.nativeElement.clientHeight;\r\n    }\r\n    get clientWidth() {\r\n        return this.nativeElement.clientWidth;\r\n    }\r\n    get scrollHeight() {\r\n        return this.nativeElement.scrollHeight;\r\n    }\r\n    get scrollWidth() {\r\n        return this.nativeElement.scrollWidth;\r\n    }\r\n    // Get viewport scroll offset, scrollTop or scrollLeft\r\n    get scrollTop() {\r\n        return this.nativeElement.scrollTop;\r\n    }\r\n    get scrollLeft() {\r\n        return this.nativeElement.scrollLeft;\r\n    }\r\n    // Get the available scrollable size\r\n    get scrollMaxX() {\r\n        return this.scrollWidth - this.clientWidth;\r\n    }\r\n    get scrollMaxY() {\r\n        return this.scrollHeight - this.clientHeight;\r\n    }\r\n    get contentHeight() {\r\n        var _a;\r\n        return ((_a = this.contentWrapperElement) === null || _a === void 0 ? void 0 : _a.clientHeight) || 0;\r\n    }\r\n    get contentWidth() {\r\n        var _a;\r\n        return ((_a = this.contentWrapperElement) === null || _a === void 0 ? void 0 : _a.clientWidth) || 0;\r\n    }\r\n    /**\r\n     * Activate viewport pointer events such as 'hovered' and 'clicked' events\r\n     */\r\n    activatePointerEvents(propagate, destroyed) {\r\n        this.hovered = new Observable((subscriber) => {\r\n            // Stream that emits when pointer is moved over the viewport (used to set the hovered state)\r\n            const mouseMoveStream = fromEvent(this.nativeElement, 'mousemove', { passive: true });\r\n            const mouseMove = propagate ? mouseMoveStream : mouseMoveStream.pipe(stopPropagation());\r\n            // Stream that emits when pointer leaves the viewport (used to remove the hovered state)\r\n            const mouseLeave = fromEvent(this.nativeElement, 'mouseleave', { passive: true }).pipe(map(() => false));\r\n            merge(mouseMove, mouseLeave).pipe(tap((e) => subscriber.next(e)), takeUntil(destroyed)).subscribe();\r\n        });\r\n        this.clicked = new Observable((subscriber) => {\r\n            const mouseDown = fromEvent(this.nativeElement, 'mousedown', { passive: true }).pipe(tap((e) => subscriber.next(e)));\r\n            const mouseUp = fromEvent(this.nativeElement, 'mouseup', { passive: true }).pipe(tap(() => subscriber.next(false)));\r\n            mouseDown.pipe(switchMap(() => mouseUp), takeUntil(destroyed)).subscribe();\r\n        });\r\n    }\r\n    /**\r\n     * Set this directive as a non-functional wrapper, called when a custom viewport is used\r\n     */\r\n    setAsWrapper() {\r\n        // In this case the default viewport and the default content wrapper will act as a mask\r\n        this.nativeElement.className = 'ng-native-scrollbar-hider ng-scroll-layer';\r\n        if (this.nativeElement.firstElementChild) {\r\n            this.nativeElement.firstElementChild.className = 'ng-scroll-layer';\r\n        }\r\n    }\r\n    /**\r\n     * Set this directive as  the viewport, called when no custom viewport is used\r\n     */\r\n    setAsViewport(customClassName) {\r\n        this.nativeElement.className = `ng-native-scrollbar-hider ng-scroll-viewport ${customClassName}`;\r\n        // Check if the custom viewport has only one child and set it as the content wrapper\r\n        if (this.nativeElement.firstElementChild) {\r\n            this.contentWrapperElement = this.nativeElement.firstElementChild;\r\n            this.contentWrapperElement.classList.add('ng-scroll-content');\r\n        }\r\n    }\r\n    /**\r\n     * Scroll viewport vertically\r\n     */\r\n    scrollYTo(value) {\r\n        this.nativeElement.scrollTop = value;\r\n    }\r\n    /**\r\n     * Scroll viewport horizontally\r\n     */\r\n    scrollXTo(value) {\r\n        this.nativeElement.scrollLeft = value;\r\n    }\r\n}\r\nScrollViewport.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollViewport, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nScrollViewport.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ScrollViewport, selector: \"[scrollViewport]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollViewport, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[scrollViewport]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; } });\n\nclass NgScrollbarBase {\r\n}\r\nNgScrollbarBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarBase, deps: [], target: i0.ɵɵFactoryTarget.Directive });\r\nNgScrollbarBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgScrollbarBase, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarBase, decorators: [{\r\n            type: Directive\r\n        }] });\n\nconst NG_SCROLLBAR_OPTIONS = new InjectionToken('NG_SCROLLBAR_OPTIONS');\n\nconst defaultOptions = {\r\n    viewClass: '',\r\n    trackClass: '',\r\n    thumbClass: '',\r\n    track: 'vertical',\r\n    appearance: 'compact',\r\n    visibility: 'native',\r\n    position: 'native',\r\n    pointerEventsMethod: 'viewport',\r\n    trackClickScrollDuration: 300,\r\n    minThumbSize: 20,\r\n    windowResizeDebounce: 0,\r\n    sensorDebounce: 0,\r\n    scrollAuditTime: 0,\r\n    viewportPropagateMouseMove: true,\r\n    autoHeightDisabled: true,\r\n    autoWidthDisabled: true,\r\n    sensorDisabled: false,\r\n    pointerEventsDisabled: false\r\n};\r\nclass ScrollbarManager {\r\n    constructor(options) {\r\n        this.globalOptions = options ? Object.assign(Object.assign({}, defaultOptions), options) : defaultOptions;\r\n        this.rtlScrollAxisType = getRtlScrollAxisType();\r\n    }\r\n}\r\nScrollbarManager.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarManager, deps: [{ token: NG_SCROLLBAR_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\r\nScrollbarManager.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarManager, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarManager, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: undefined, decorators: [{\r\n                        type: Optional\r\n                    }, {\r\n                        type: Inject,\r\n                        args: [NG_SCROLLBAR_OPTIONS]\r\n                    }] }];\r\n    } });\n\n// @dynamic\r\nclass TrackAdapter {\r\n    constructor(cmp, trackElement, document) {\r\n        this.cmp = cmp;\r\n        this.trackElement = trackElement;\r\n        this.document = document;\r\n    }\r\n    // Stream that emits when the track element is clicked\r\n    get clicked() {\r\n        const mouseDown = fromEvent(this.trackElement, 'mousedown', { passive: true }).pipe(stopPropagation(), preventSelection(this.document));\r\n        const mouseup = fromEvent(this.document, 'mouseup', { passive: true }).pipe(stopPropagation(), enableSelection(this.document), switchMap(() => EMPTY));\r\n        return merge(mouseDown, mouseup);\r\n    }\r\n    // Get track client rect\r\n    get clientRect() {\r\n        return this.trackElement.getBoundingClientRect();\r\n    }\r\n    /**\r\n     * Stream that emits when scrollbar track is clicked\r\n     */\r\n    onTrackClicked(e, thumbSize, scrollSize) {\r\n        return of(e).pipe(pluck(this.pageProperty), \r\n        // Calculate scrollTo position\r\n        map((pageOffset) => {\r\n            const clickOffset = pageOffset - this.offset;\r\n            const offset = clickOffset - (thumbSize / 2);\r\n            const ratio = offset / this.size;\r\n            return ratio * scrollSize;\r\n        }), \r\n        // Smooth scroll to position\r\n        tap((value) => {\r\n            this.cmp.scrollTo(Object.assign(Object.assign({}, this.mapToScrollToOption(value)), { duration: coerceNumberProperty(this.cmp.trackClickScrollDuration) }));\r\n        }));\r\n    }\r\n}\r\nTrackAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackAdapter, deps: [{ token: NgScrollbarBase }, { token: HTMLElement }, { token: Document }], target: i0.ɵɵFactoryTarget.Directive });\r\nTrackAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: TrackAdapter, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackAdapter, decorators: [{\r\n            type: Directive\r\n        }], ctorParameters: function () { return [{ type: NgScrollbarBase }, { type: HTMLElement }, { type: Document }]; } });\n\nclass TrackXDirective extends TrackAdapter {\r\n    constructor(cmp, trackElement, document) {\r\n        super(cmp, trackElement.nativeElement, document);\r\n        this.cmp = cmp;\r\n        this.document = document;\r\n    }\r\n    get pageProperty() {\r\n        return 'pageX';\r\n    }\r\n    get offset() {\r\n        return this.clientRect.left;\r\n    }\r\n    get size() {\r\n        return this.trackElement.clientWidth;\r\n    }\r\n    mapToScrollToOption(value) {\r\n        return { left: value };\r\n    }\r\n}\r\nTrackXDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackXDirective, deps: [{ token: NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nTrackXDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: TrackXDirective, selector: \"[scrollbarTrackX]\", usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackXDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[scrollbarTrackX]' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    } });\r\nclass TrackYDirective extends TrackAdapter {\r\n    constructor(cmp, trackElement, document) {\r\n        super(cmp, trackElement.nativeElement, document);\r\n        this.cmp = cmp;\r\n        this.document = document;\r\n    }\r\n    get pageProperty() {\r\n        return 'pageY';\r\n    }\r\n    get offset() {\r\n        return this.clientRect.top;\r\n    }\r\n    get size() {\r\n        return this.trackElement.clientHeight;\r\n    }\r\n    mapToScrollToOption(value) {\r\n        return { top: value };\r\n    }\r\n}\r\nTrackYDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackYDirective, deps: [{ token: NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nTrackYDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: TrackYDirective, selector: \"[scrollbarTrackY]\", usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: TrackYDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[scrollbarTrackY]' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    } });\n\n// @dynamic\r\nclass ThumbAdapter {\r\n    constructor(cmp, track, thumbElement, document) {\r\n        this.cmp = cmp;\r\n        this.track = track;\r\n        this.thumbElement = thumbElement;\r\n        this.document = document;\r\n        // Stream that emits dragging state\r\n        this._dragging = new Subject();\r\n        this.dragging = this._dragging.pipe(distinctUntilChanged());\r\n    }\r\n    get trackMax() {\r\n        return this.track.size - this.size;\r\n    }\r\n    // Get thumb client rect\r\n    get clientRect() {\r\n        return this.thumbElement.getBoundingClientRect();\r\n    }\r\n    // Stream that emits when scrollbar thumb is clicked\r\n    get clicked() {\r\n        return fromEvent(this.thumbElement, 'mousedown', { passive: true }).pipe(stopPropagation());\r\n    }\r\n    // Calculate and update thumb position and size\r\n    update() {\r\n        const size = calculateThumbSize(this.track.size, this.viewportScrollSize, this.cmp.minThumbSize);\r\n        const position = calculateThumbPosition(this.viewportScrollOffset, this.viewportScrollMax, this.trackMax);\r\n        animationFrameScheduler.schedule(() => this.updateStyles(this.handleDirection(position, this.trackMax), size));\r\n    }\r\n    /**\r\n     * Stream that emits the 'scrollTo' position when a scrollbar thumb element is dragged\r\n     * This function is called by thumb drag event using viewport or scrollbar pointer events\r\n     */\r\n    dragged(event) {\r\n        let trackMaxStart;\r\n        let scrollMaxStart;\r\n        const dragStart = of(event).pipe(preventSelection(this.document), tap(() => {\r\n            // Capture scrollMax and trackMax once\r\n            trackMaxStart = this.trackMax;\r\n            scrollMaxStart = this.viewportScrollMax;\r\n            this.setDragging(true);\r\n        }));\r\n        const dragging = fromEvent(this.document, 'mousemove', { capture: true, passive: true }).pipe(stopPropagation());\r\n        const dragEnd = fromEvent(this.document, 'mouseup', { capture: true }).pipe(stopPropagation(), enableSelection(this.document), tap(() => this.setDragging(false)));\r\n        return dragStart.pipe(pluck(this.pageProperty), map((pageOffset) => pageOffset - this.dragStartOffset), mergeMap((mouseDownOffset) => dragging.pipe(pluck(this.clientProperty), \r\n        // Calculate how far the pointer is from the top/left of the scrollbar (minus the dragOffset).\r\n        map((mouseOffset) => mouseOffset - this.track.offset), map((offset) => scrollMaxStart * (offset - mouseDownOffset) / trackMaxStart), map((position) => this.handleDrag(position, scrollMaxStart)), tap((position) => this.scrollTo(position)), takeUntil(dragEnd))));\r\n    }\r\n}\r\nThumbAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbAdapter, deps: [{ token: NgScrollbarBase }, { token: TrackAdapter }, { token: HTMLElement }, { token: Document }], target: i0.ɵɵFactoryTarget.Directive });\r\nThumbAdapter.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ThumbAdapter, outputs: { dragging: \"dragging\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbAdapter, decorators: [{\r\n            type: Directive\r\n        }], ctorParameters: function () { return [{ type: NgScrollbarBase }, { type: TrackAdapter }, { type: HTMLElement }, { type: Document }]; }, propDecorators: { dragging: [{\r\n                type: Output\r\n            }] } });\r\n/**\r\n * Calculate scrollbar thumb size\r\n */\r\nfunction calculateThumbSize(trackSize, contentSize, minThumbSize) {\r\n    const scrollbarRatio = trackSize / contentSize;\r\n    const thumbSize = scrollbarRatio * trackSize;\r\n    return Math.max(~~thumbSize, minThumbSize);\r\n}\r\n/**\r\n * Calculate scrollbar thumb position\r\n */\r\nfunction calculateThumbPosition(scrollPosition, scrollMax, trackMax) {\r\n    return scrollPosition * trackMax / scrollMax;\r\n}\n\nclass ThumbXDirective extends ThumbAdapter {\r\n    constructor(cmp, track, element, document, dir) {\r\n        super(cmp, track, element.nativeElement, document);\r\n        this.cmp = cmp;\r\n        this.track = track;\r\n        this.element = element;\r\n        this.document = document;\r\n        this.dir = dir;\r\n    }\r\n    get clientProperty() {\r\n        return 'clientX';\r\n    }\r\n    get pageProperty() {\r\n        return 'pageX';\r\n    }\r\n    get viewportScrollSize() {\r\n        return this.cmp.viewport.scrollWidth;\r\n    }\r\n    get viewportScrollOffset() {\r\n        return this.cmp.viewport.scrollLeft;\r\n    }\r\n    get viewportScrollMax() {\r\n        return this.cmp.viewport.scrollMaxX;\r\n    }\r\n    get dragStartOffset() {\r\n        return this.clientRect.left + this.document.defaultView.pageXOffset || 0;\r\n    }\r\n    get size() {\r\n        return this.thumbElement.clientWidth;\r\n    }\r\n    updateStyles(position, size) {\r\n        this.thumbElement.style.width = `${size}px`;\r\n        this.thumbElement.style.transform = `translate3d(${position}px, 0, 0)`;\r\n    }\r\n    handleDrag(position, scrollMax) {\r\n        if (this.dir.value === 'rtl') {\r\n            if (this.cmp.manager.rtlScrollAxisType === 1 /* NEGATED */) {\r\n                return position - scrollMax;\r\n            }\r\n            if (this.cmp.manager.rtlScrollAxisType === 2 /* INVERTED */) {\r\n                return scrollMax - position;\r\n            }\r\n            // Keeping this as a memo\r\n            // if (this.rtlScrollAxisType === RtlScrollAxisType.NORMAL) {\r\n            //   return position;\r\n            // }\r\n        }\r\n        return position;\r\n    }\r\n    handleDirection(position, trackMax) {\r\n        if (this.dir.value === 'rtl') {\r\n            if (this.cmp.manager.rtlScrollAxisType === 2 /* INVERTED */) {\r\n                return -position;\r\n            }\r\n            if (this.cmp.manager.rtlScrollAxisType === 0 /* NORMAL */) {\r\n                return position - trackMax;\r\n            }\r\n            // Keeping this as a memo\r\n            // if (this.rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n            //   return position;\r\n            // }\r\n        }\r\n        return position;\r\n    }\r\n    setDragging(value) {\r\n        this.cmp.setDragging({ horizontalDragging: value });\r\n    }\r\n    scrollTo(position) {\r\n        this.cmp.viewport.scrollXTo(position);\r\n    }\r\n}\r\nThumbXDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbXDirective, deps: [{ token: NgScrollbarBase }, { token: TrackXDirective }, { token: i0.ElementRef }, { token: DOCUMENT }, { token: i3.Directionality }], target: i0.ɵɵFactoryTarget.Directive });\r\nThumbXDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ThumbXDirective, selector: \"[scrollbarThumbX]\", usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbXDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[scrollbarThumbX]' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgScrollbarBase }, { type: TrackXDirective }, { type: i0.ElementRef }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i3.Directionality }];\r\n    } });\r\nclass ThumbYDirective extends ThumbAdapter {\r\n    constructor(cmp, track, element, document) {\r\n        super(cmp, track, element.nativeElement, document);\r\n        this.cmp = cmp;\r\n        this.track = track;\r\n        this.element = element;\r\n        this.document = document;\r\n    }\r\n    get pageProperty() {\r\n        return 'pageY';\r\n    }\r\n    get viewportScrollSize() {\r\n        return this.cmp.viewport.scrollHeight;\r\n    }\r\n    get viewportScrollOffset() {\r\n        return this.cmp.viewport.scrollTop;\r\n    }\r\n    get viewportScrollMax() {\r\n        return this.cmp.viewport.scrollMaxY;\r\n    }\r\n    get clientProperty() {\r\n        return 'clientY';\r\n    }\r\n    get dragStartOffset() {\r\n        return this.clientRect.top + this.document.defaultView.pageYOffset || 0;\r\n    }\r\n    get size() {\r\n        return this.thumbElement.clientHeight;\r\n    }\r\n    updateStyles(position, size) {\r\n        this.thumbElement.style.height = `${size}px`;\r\n        this.thumbElement.style.transform = `translate3d(0px, ${position}px, 0)`;\r\n    }\r\n    handleDrag(position) {\r\n        return position;\r\n    }\r\n    handleDirection(position) {\r\n        return position;\r\n    }\r\n    setDragging(value) {\r\n        this.cmp.setDragging({ verticalDragging: value });\r\n    }\r\n    scrollTo(position) {\r\n        this.cmp.viewport.scrollYTo(position);\r\n    }\r\n}\r\nThumbYDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbYDirective, deps: [{ token: NgScrollbarBase }, { token: TrackYDirective }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\r\nThumbYDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ThumbYDirective, selector: \"[scrollbarThumbY]\", usesInheritance: true, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ThumbYDirective, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[scrollbarThumbY]' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: NgScrollbarBase }, { type: TrackYDirective }, { type: i0.ElementRef }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }];\r\n    } });\n\n// @dynamic\r\nclass Scrollbar {\r\n    constructor(el, cmp, platform, document, zone) {\r\n        this.el = el;\r\n        this.cmp = cmp;\r\n        this.platform = platform;\r\n        this.document = document;\r\n        this.zone = zone;\r\n        // Stream that emits to unsubscribe from all streams\r\n        this.destroyed = new Subject();\r\n    }\r\n    /**\r\n     * Activate scrollbar pointer events\r\n     */\r\n    activatePointerEvents() {\r\n        // Stream that emits when scrollbar thumb is dragged\r\n        let thumbDragEvent;\r\n        // Stream that emits when scrollbar track is clicked\r\n        let trackClickEvent;\r\n        // Stream that emits when scrollbar track is hovered\r\n        let trackHoveredEvent;\r\n        // Set the method used for the pointer events option\r\n        if (this.cmp.pointerEventsMethod === 'viewport') {\r\n            // Pointer events using the viewport\r\n            this.viewportTrackClicked = new Subject();\r\n            this.viewportThumbClicked = new Subject();\r\n            // Activate the pointer events of the viewport directive\r\n            this.cmp.viewport.activatePointerEvents(this.cmp.viewportPropagateMouseMove, this.destroyed);\r\n            // Set streams\r\n            thumbDragEvent = this.viewportThumbClicked;\r\n            trackClickEvent = this.viewportTrackClicked;\r\n            trackHoveredEvent = this.cmp.viewport.hovered.pipe(\r\n            // Check if track is hovered\r\n            map((e) => e ? isWithinBounds(e, this.el.getBoundingClientRect()) : false), distinctUntilChanged(), \r\n            // Enable / disable text selection\r\n            tap((hovered) => this.document.onselectstart = hovered ? () => false : null));\r\n            this.cmp.viewport.clicked.pipe(tap((e) => {\r\n                if (e) {\r\n                    if (isWithinBounds(e, this.thumb.clientRect)) {\r\n                        this.viewportThumbClicked.next(e);\r\n                    }\r\n                    else if (isWithinBounds(e, this.track.clientRect)) {\r\n                        this.cmp.setClicked(true);\r\n                        this.viewportTrackClicked.next(e);\r\n                    }\r\n                }\r\n                else {\r\n                    this.cmp.setClicked(false);\r\n                }\r\n            }), takeUntil(this.destroyed)).subscribe();\r\n        }\r\n        else {\r\n            // Pointer events method is using 'scrollbar'\r\n            thumbDragEvent = this.thumb.clicked;\r\n            trackClickEvent = this.track.clicked;\r\n            trackHoveredEvent = this.hovered;\r\n        }\r\n        return merge(\r\n        // Activate scrollbar hovered event\r\n        trackHoveredEvent.pipe(tap((e) => this.setHovered(e))), \r\n        // Activate scrollbar thumb drag event\r\n        thumbDragEvent.pipe(switchMap((e) => this.thumb.dragged(e))), \r\n        // Activate scrollbar track click event\r\n        trackClickEvent.pipe(switchMap((e) => this.track.onTrackClicked(e, this.thumb.size, this.viewportScrollSize))));\r\n    }\r\n    // Stream that emits when the track element is hovered\r\n    get hovered() {\r\n        const mouseEnter = fromEvent(this.el, 'mouseenter', { passive: true }).pipe(stopPropagation(), map(() => true));\r\n        const mouseLeave = fromEvent(this.el, 'mouseleave', { passive: true }).pipe(stopPropagation(), map(() => false));\r\n        return merge(mouseEnter, mouseLeave);\r\n    }\r\n    ngOnInit() {\r\n        this.zone.runOutsideAngular(() => {\r\n            // Activate pointer events on Desktop only\r\n            if (!(this.platform.IOS || this.platform.ANDROID) && !this.cmp.pointerEventsDisabled) {\r\n                this.activatePointerEvents().pipe(takeUntil(this.destroyed)).subscribe();\r\n            }\r\n            // Update scrollbar thumb when viewport is scrolled and when scrollbar component is updated\r\n            merge(this.cmp.scrolled, this.cmp.updated).pipe(tap(() => { var _a; return (_a = this.thumb) === null || _a === void 0 ? void 0 : _a.update(); }), takeUntil(this.destroyed)).subscribe();\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed.next();\r\n        this.destroyed.complete();\r\n        // Clean up viewport streams if used\r\n        if (this.viewportThumbClicked && this.viewportTrackClicked) {\r\n            this.viewportTrackClicked.complete();\r\n            this.viewportThumbClicked.complete();\r\n        }\r\n    }\r\n}\r\nScrollbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Scrollbar, deps: [{ token: HTMLElement }, { token: NgScrollbarBase }, { token: i2.Platform }, { token: Document }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive });\r\nScrollbar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: Scrollbar, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: Scrollbar, decorators: [{\r\n            type: Directive\r\n        }], ctorParameters: function () { return [{ type: HTMLElement }, { type: NgScrollbarBase }, { type: i2.Platform }, { type: Document }, { type: i0.NgZone }]; } });\n\nclass ScrollbarY extends Scrollbar {\r\n    constructor(el, cmp, platform, document, zone) {\r\n        super(el.nativeElement, cmp, platform, document, zone);\r\n        this.cmp = cmp;\r\n        this.platform = platform;\r\n        this.document = document;\r\n        this.zone = zone;\r\n    }\r\n    get viewportScrollSize() {\r\n        return this.cmp.viewport.scrollHeight;\r\n    }\r\n    setHovered(value) {\r\n        this.cmp.setHovered({ verticalHovered: value });\r\n    }\r\n}\r\nScrollbarY.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarY, deps: [{ token: i0.ElementRef }, { token: NgScrollbarBase }, { token: i2.Platform }, { token: DOCUMENT }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nScrollbarY.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ScrollbarY, selector: \"scrollbar-y\", host: { properties: { \"class.scrollbar-control\": \"true\" } }, viewQueries: [{ propertyName: \"track\", first: true, predicate: TrackYDirective, descendants: true, static: true }, { propertyName: \"thumb\", first: true, predicate: ThumbYDirective, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbY class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `, isInline: true, styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control{width:var(--vertical-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track{width:var(--vertical-scrollbar-size);height:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{height:0;width:100%}::ng-deep .ng-scrollbar-wrapper[verticalHovered=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-y.scrollbar-control{top:0;bottom:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr]>scrollbar-y.scrollbar-control{right:0;left:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertAll]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertAll]>scrollbar-y.scrollbar-control{left:unset;right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all]>scrollbar-y.scrollbar-control[fit=true]{bottom:var(--scrollbar-total-size);top:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertX]>scrollbar-y.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertAll]>scrollbar-y.scrollbar-control[fit=true]{top:var(--scrollbar-total-size);bottom:0}\\n\"], directives: [{ type: TrackYDirective, selector: \"[scrollbarTrackY]\" }, { type: ThumbYDirective, selector: \"[scrollbarThumbY]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarY, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'scrollbar-y', host: { '[class.scrollbar-control]': 'true' }, changeDetection: ChangeDetectionStrategy.OnPush, template: `\r\n    <div scrollbarTrackY class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbY class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `, styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control{width:var(--vertical-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track{width:var(--vertical-scrollbar-size);height:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-y.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{height:0;width:100%}::ng-deep .ng-scrollbar-wrapper[verticalHovered=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>scrollbar-y.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-y.scrollbar-control{top:0;bottom:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr]>scrollbar-y.scrollbar-control{right:0;left:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=ltr][position=invertAll]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl]>scrollbar-y.scrollbar-control{left:0;right:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertY]>scrollbar-y.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][dir=rtl][position=invertAll]>scrollbar-y.scrollbar-control{left:unset;right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all]>scrollbar-y.scrollbar-control[fit=true]{bottom:var(--scrollbar-total-size);top:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertX]>scrollbar-y.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][position=invertAll]>scrollbar-y.scrollbar-control[fit=true]{top:var(--scrollbar-total-size);bottom:0}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: NgScrollbarBase }, { type: i2.Platform }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i0.NgZone }];\r\n    }, propDecorators: { track: [{\r\n                type: ViewChild,\r\n                args: [TrackYDirective, { static: true }]\r\n            }], thumb: [{\r\n                type: ViewChild,\r\n                args: [ThumbYDirective, { static: true }]\r\n            }] } });\r\nclass ScrollbarX extends Scrollbar {\r\n    constructor(el, cmp, platform, document, zone) {\r\n        super(el.nativeElement, cmp, platform, document, zone);\r\n        this.cmp = cmp;\r\n        this.platform = platform;\r\n        this.document = document;\r\n        this.zone = zone;\r\n    }\r\n    get viewportScrollSize() {\r\n        return this.cmp.viewport.scrollWidth;\r\n    }\r\n    setHovered(value) {\r\n        this.cmp.setHovered({ horizontalHovered: value });\r\n    }\r\n}\r\nScrollbarX.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarX, deps: [{ token: i0.ElementRef }, { token: NgScrollbarBase }, { token: i2.Platform }, { token: DOCUMENT }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component });\r\nScrollbarX.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ScrollbarX, selector: \"scrollbar-x\", host: { properties: { \"class.scrollbar-control\": \"true\" } }, viewQueries: [{ propertyName: \"track\", first: true, predicate: TrackXDirective, descendants: true, static: true }, { propertyName: \"thumb\", first: true, predicate: ThumbXDirective, descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: `\r\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbX class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `, isInline: true, styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control{height:var(--horizontal-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track{height:var(--horizontal-scrollbar-size);width:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{width:0;height:100%}::ng-deep .ng-scrollbar-wrapper[horizontalHovered=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-x.scrollbar-control{left:0;right:0;bottom:0;top:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}\\n\"], directives: [{ type: TrackXDirective, selector: \"[scrollbarTrackX]\" }, { type: ThumbXDirective, selector: \"[scrollbarThumbX]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ScrollbarX, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'scrollbar-x', host: { '[class.scrollbar-control]': 'true' }, changeDetection: ChangeDetectionStrategy.OnPush, template: `\r\n    <div scrollbarTrackX class=\"ng-scrollbar-track {{cmp.trackClass}}\">\r\n      <div scrollbarThumbX class=\"ng-scrollbar-thumb {{cmp.thumbClass}}\"></div>\r\n    </div>\r\n  `, styles: [\"::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control{height:var(--horizontal-scrollbar-total-size)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track{height:var(--horizontal-scrollbar-size);width:calc(100% - var(--scrollbar-padding) * 2)}::ng-deep .ng-scrollbar-wrapper>scrollbar-x.scrollbar-control>.ng-scrollbar-track>.ng-scrollbar-thumb{width:0;height:100%}::ng-deep .ng-scrollbar-wrapper[horizontalHovered=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>scrollbar-x.scrollbar-control .ng-scrollbar-thumb{background-color:var(--scrollbar-thumb-hover-color)}::ng-deep .ng-scrollbar-wrapper[position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false]>scrollbar-x.scrollbar-control{left:0;right:0;bottom:0;top:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertX]>scrollbar-x.scrollbar-control,::ng-deep .ng-scrollbar-wrapper[deactivated=false][position=invertAll]>scrollbar-x.scrollbar-control{top:0;bottom:unset}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=ltr][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl]>scrollbar-x.scrollbar-control[fit=true]{left:var(--scrollbar-total-size);right:0}::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertY]>scrollbar-x.scrollbar-control[fit=true],::ng-deep .ng-scrollbar-wrapper[deactivated=false][track=all][dir=rtl][position=invertAll]>scrollbar-x.scrollbar-control[fit=true]{right:var(--scrollbar-total-size);left:0}\\n\"] }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: i0.ElementRef }, { type: NgScrollbarBase }, { type: i2.Platform }, { type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: i0.NgZone }];\r\n    }, propDecorators: { track: [{\r\n                type: ViewChild,\r\n                args: [TrackXDirective, { static: true }]\r\n            }], thumb: [{\r\n                type: ViewChild,\r\n                args: [ThumbXDirective, { static: true }]\r\n            }] } });\n\nclass NgAttr {\r\n    constructor(el) {\r\n        this.el = el;\r\n    }\r\n    set ngAttr(attrs) {\r\n        for (const [key, value] of Object.entries(attrs)) {\r\n            this.el.nativeElement.setAttribute(key, value);\r\n        }\r\n    }\r\n}\r\nNgAttr.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgAttr, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\r\nNgAttr.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgAttr, selector: \"[ngAttr]\", inputs: { ngAttr: \"ngAttr\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgAttr, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[ngAttr]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { ngAttr: [{\r\n                type: Input\r\n            }] } });\n\nclass ResizeSensor {\r\n    constructor(zone, platform, scrollbar) {\r\n        this.zone = zone;\r\n        this.platform = platform;\r\n        this.scrollbar = scrollbar;\r\n        this._disabled = false;\r\n        this._currentSubscription = null;\r\n        this.event = new EventEmitter();\r\n        if (!scrollbar) {\r\n            throw new Error('[NgScrollbar Resize Sensor Directive]: Host element must be an NgScrollbar component.');\r\n        }\r\n    }\r\n    /** Debounce interval for emitting the changes. */\r\n    get debounce() {\r\n        return this._debounce;\r\n    }\r\n    set debounce(value) {\r\n        this._debounce = coerceNumberProperty(value);\r\n        this._subscribe();\r\n    }\r\n    /** Whether ResizeObserver is disabled. */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(value) {\r\n        this._disabled = coerceBooleanProperty(value);\r\n        this._disabled ? this._unsubscribe() : this._subscribe();\r\n    }\r\n    ngAfterContentInit() {\r\n        if (!this._currentSubscription && !this._disabled) {\r\n            this._subscribe();\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this._unsubscribe();\r\n    }\r\n    _subscribe() {\r\n        this._unsubscribe();\r\n        if (this.platform.isBrowser) {\r\n            const stream = new Observable((observer) => {\r\n                this._resizeObserver = new ResizeObserver((e) => observer.next(e));\r\n                this._resizeObserver.observe(this.scrollbar.viewport.nativeElement);\r\n                if (this.scrollbar.viewport.contentWrapperElement) {\r\n                    this._resizeObserver.observe(this.scrollbar.viewport.contentWrapperElement);\r\n                }\r\n            });\r\n            this.zone.runOutsideAngular(() => {\r\n                this._currentSubscription = (this._debounce ? stream.pipe(debounceTime(this._debounce)) : stream).subscribe(this.event);\r\n            });\r\n        }\r\n    }\r\n    _unsubscribe() {\r\n        var _a, _b;\r\n        (_a = this._resizeObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\r\n        (_b = this._currentSubscription) === null || _b === void 0 ? void 0 : _b.unsubscribe();\r\n    }\r\n}\r\nResizeSensor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ResizeSensor, deps: [{ token: i0.NgZone }, { token: i2.Platform }, { token: NgScrollbarBase }], target: i0.ɵɵFactoryTarget.Directive });\r\nResizeSensor.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: ResizeSensor, selector: \"[resizeSensor]\", inputs: { debounce: [\"sensorDebounce\", \"debounce\"], disabled: [\"sensorDisabled\", \"disabled\"] }, outputs: { event: \"resizeSensor\" }, ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: ResizeSensor, decorators: [{\r\n            type: Directive,\r\n            args: [{ selector: '[resizeSensor]' }]\r\n        }], ctorParameters: function () { return [{ type: i0.NgZone }, { type: i2.Platform }, { type: NgScrollbarBase }]; }, propDecorators: { debounce: [{\r\n                type: Input,\r\n                args: ['sensorDebounce']\r\n            }], disabled: [{\r\n                type: Input,\r\n                args: ['sensorDisabled']\r\n            }], event: [{\r\n                type: Output,\r\n                args: ['resizeSensor']\r\n            }] } });\n\nclass NativeScrollbarSizeFactory {\r\n    constructor(document, manager, platform) {\r\n        this.document = document;\r\n        this.manager = manager;\r\n        this.platform = platform;\r\n        this._scrollbarSize = new BehaviorSubject(this.getNativeScrollbarSize());\r\n        this.scrollbarSize = this._scrollbarSize.asObservable();\r\n        // Calculate native scrollbar size on window resize event, because the size changes if use zoomed in/out\r\n        if (platform.isBrowser) {\r\n            fromEvent(this.document.defaultView, 'resize', { passive: true }).pipe(debounceTime(this.manager.globalOptions.windowResizeDebounce), map(() => this.getNativeScrollbarSize()), distinctUntilChanged(), tap((size) => this._scrollbarSize.next(size))).subscribe();\r\n        }\r\n    }\r\n    /**\r\n     * Get native scrollbar size\r\n     */\r\n    getNativeScrollbarSize() {\r\n        // Avoid executing browser code in server side rendering\r\n        if (!this.platform.isBrowser) {\r\n            return 0;\r\n        }\r\n        // Hide iOS browsers native scrollbar\r\n        if (this.platform.IOS) {\r\n            return 6;\r\n        }\r\n        const box = this.document.createElement('div');\r\n        box.className = 'ng-scrollbar-measure';\r\n        box.style.left = '0px';\r\n        box.style.overflow = 'scroll';\r\n        box.style.position = 'fixed';\r\n        box.style.top = '-9999px';\r\n        this.document.body.appendChild(box);\r\n        const size = box.getBoundingClientRect().right;\r\n        this.document.body.removeChild(box);\r\n        return size;\r\n    }\r\n}\r\nNativeScrollbarSizeFactory.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NativeScrollbarSizeFactory, deps: [{ token: DOCUMENT }, { token: ScrollbarManager }, { token: i2.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\r\nNativeScrollbarSizeFactory.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NativeScrollbarSizeFactory, providedIn: 'root' });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NativeScrollbarSizeFactory, decorators: [{\r\n            type: Injectable,\r\n            args: [{ providedIn: 'root' }]\r\n        }], ctorParameters: function () {\r\n        return [{ type: Document, decorators: [{\r\n                        type: Inject,\r\n                        args: [DOCUMENT]\r\n                    }] }, { type: ScrollbarManager }, { type: i2.Platform }];\r\n    } });\n\nclass HideNativeScrollbar {\r\n    constructor(el, renderer, hideNativeScrollbar) {\r\n        this.renderer = renderer;\r\n        this.hideNativeScrollbar = hideNativeScrollbar;\r\n        this._subscriber = Subscription.EMPTY;\r\n        this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe((size) => {\r\n            this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${size}px`, RendererStyleFlags2.DashCase);\r\n        });\r\n    }\r\n    ngOnDestroy() {\r\n        this._subscriber.unsubscribe();\r\n    }\r\n}\r\nHideNativeScrollbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: HideNativeScrollbar, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: NativeScrollbarSizeFactory }], target: i0.ɵɵFactoryTarget.Directive });\r\nHideNativeScrollbar.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.2.3\", type: HideNativeScrollbar, selector: \"[hideNativeScrollbar]\", ngImport: i0 });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: HideNativeScrollbar, decorators: [{\r\n            type: Directive,\r\n            args: [{\r\n                    selector: '[hideNativeScrollbar]'\r\n                }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: NativeScrollbarSizeFactory }]; } });\n\nclass NgScrollbar {\r\n    constructor(el, zone, changeDetectorRef, dir, smoothScroll, manager) {\r\n        this.el = el;\r\n        this.zone = zone;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.dir = dir;\r\n        this.smoothScroll = smoothScroll;\r\n        this.manager = manager;\r\n        this._disabled = false;\r\n        this._sensorDisabled = this.manager.globalOptions.sensorDisabled;\r\n        this._pointerEventsDisabled = this.manager.globalOptions.pointerEventsDisabled;\r\n        this._autoHeightDisabled = this.manager.globalOptions.autoHeightDisabled;\r\n        this._autoWidthDisabled = this.manager.globalOptions.autoWidthDisabled;\r\n        this._viewportPropagateMouseMove = this.manager.globalOptions.viewportPropagateMouseMove;\r\n        /** A class forwarded to scrollable viewport element */\r\n        this.viewClass = this.manager.globalOptions.viewClass;\r\n        /** A class forwarded to the scrollbar track element */\r\n        this.trackClass = this.manager.globalOptions.trackClass;\r\n        /** A class forwarded to the scrollbar thumb element */\r\n        this.thumbClass = this.manager.globalOptions.thumbClass;\r\n        /** Minimum scrollbar thumb size */\r\n        this.minThumbSize = this.manager.globalOptions.minThumbSize;\r\n        /** The duration which the scrolling takes to reach its target when scrollbar rail is clicked */\r\n        this.trackClickScrollDuration = this.manager.globalOptions.trackClickScrollDuration;\r\n        /**\r\n         * Sets the pointer events method\r\n         * Use viewport pointer events  to handle dragging and track click (This makes scrolling work when mouse is over the scrollbar)\r\n         * Use scrollbar pointer events to handle dragging and track click\r\n         */\r\n        this.pointerEventsMethod = this.manager.globalOptions.pointerEventsMethod;\r\n        /**\r\n         * Sets the supported scroll track of the viewport, there are 3 options:\r\n         *\r\n         * - `vertical` Use both vertical and horizontal scrollbar\r\n         * - `horizontal` Use both vertical and horizontal scrollbar\r\n         * - `all` Use both vertical and horizontal scrollbar\r\n         */\r\n        this.track = this.manager.globalOptions.track;\r\n        /**\r\n         * When to show the scrollbar, and there are 3 options:\r\n         *\r\n         * - `native` (default) Scrollbar will be visible when viewport is scrollable like with native scrollbar\r\n         * - `hover` Scrollbars are hidden by default, only visible on scrolling or hovering\r\n         * - `always` Scrollbars are always shown even if the viewport is not scrollable\r\n         */\r\n        this.visibility = this.manager.globalOptions.visibility;\r\n        /**\r\n         *  Sets the appearance of the scrollbar, there are 2 options:\r\n         *\r\n         * - `standard` (default) scrollbar space will be reserved just like with native scrollbar.\r\n         * - `compact` scrollbar doesn't reserve any space, they are placed over the viewport.\r\n         */\r\n        this.appearance = this.manager.globalOptions.appearance;\r\n        /**\r\n         * Sets the position of each scrollbar, there are 4 options:\r\n         *\r\n         * - `native` (Default) Use the default position like in native scrollbar.\r\n         * - `invertY` Inverts vertical scrollbar position\r\n         * - `invertX` Inverts Horizontal scrollbar position\r\n         * - `invertAll` Inverts both scrollbar positions\r\n         */\r\n        this.position = this.manager.globalOptions.position;\r\n        /** Debounce interval for detecting changes via ResizeObserver */\r\n        this.sensorDebounce = this.manager.globalOptions.sensorDebounce;\r\n        /** Scroll Audit Time */\r\n        this.scrollAuditTime = this.manager.globalOptions.scrollAuditTime;\r\n        /** Steam that emits when scrollbar is updated */\r\n        this.updated = new EventEmitter();\r\n        /** Set of attributes added on the scrollbar wrapper */\r\n        this.state = {};\r\n        /** Stream that destroys components' observables */\r\n        this.destroyed = new Subject();\r\n    }\r\n    /** Disable custom scrollbar and switch back to native scrollbar */\r\n    get disabled() {\r\n        return this._disabled;\r\n    }\r\n    set disabled(disabled) {\r\n        this._disabled = coerceBooleanProperty(disabled);\r\n    }\r\n    /** Whether ResizeObserver is disabled */\r\n    get sensorDisabled() {\r\n        return this._sensorDisabled;\r\n    }\r\n    set sensorDisabled(disabled) {\r\n        this._sensorDisabled = coerceBooleanProperty(disabled);\r\n    }\r\n    /** A flag used to enable/disable the scrollbar thumb dragged event */\r\n    get pointerEventsDisabled() {\r\n        return this._pointerEventsDisabled;\r\n    }\r\n    set pointerEventsDisabled(disabled) {\r\n        this._pointerEventsDisabled = coerceBooleanProperty(disabled);\r\n    }\r\n    /** Enable viewport mousemove event propagation (only when pointerEventsMethod=\"viewport\") */\r\n    get viewportPropagateMouseMove() {\r\n        return this._viewportPropagateMouseMove;\r\n    }\r\n    set viewportPropagateMouseMove(disabled) {\r\n        this._viewportPropagateMouseMove = coerceBooleanProperty(disabled);\r\n    }\r\n    /** Disable auto-height */\r\n    get autoHeightDisabled() {\r\n        return this._autoHeightDisabled;\r\n    }\r\n    set autoHeightDisabled(disabled) {\r\n        this._autoHeightDisabled = coerceBooleanProperty(disabled);\r\n    }\r\n    /** Disable auto-width */\r\n    get autoWidthDisabled() {\r\n        return this._autoWidthDisabled;\r\n    }\r\n    set autoWidthDisabled(disabled) {\r\n        this._autoWidthDisabled = coerceBooleanProperty(disabled);\r\n    }\r\n    get nativeElement() {\r\n        return this.el.nativeElement;\r\n    }\r\n    /**\r\n     * Update local state with each change detection\r\n     */\r\n    updateState() {\r\n        let verticalUsed = false;\r\n        let horizontalUsed = false;\r\n        let isVerticallyScrollable = false;\r\n        let isHorizontallyScrollable = false;\r\n        // Check if vertical scrollbar should be displayed\r\n        if (this.track === 'all' || this.track === 'vertical') {\r\n            isVerticallyScrollable = this.viewport.scrollHeight > this.viewport.clientHeight;\r\n            verticalUsed = this.visibility === 'always' || isVerticallyScrollable;\r\n        }\r\n        // Check if horizontal scrollbar should be displayed\r\n        if (this.track === 'all' || this.track === 'horizontal') {\r\n            isHorizontallyScrollable = this.viewport.scrollWidth > this.viewport.clientWidth;\r\n            horizontalUsed = this.visibility === 'always' || isHorizontallyScrollable;\r\n        }\r\n        // Update inner wrapper attributes\r\n        this.setState({\r\n            position: this.position,\r\n            track: this.track,\r\n            appearance: this.appearance,\r\n            visibility: this.visibility,\r\n            deactivated: this.disabled,\r\n            dir: this.dir.value,\r\n            pointerEventsMethod: this.pointerEventsMethod,\r\n            verticalUsed,\r\n            horizontalUsed,\r\n            isVerticallyScrollable,\r\n            isHorizontallyScrollable\r\n        });\r\n    }\r\n    setState(state) {\r\n        this.state = Object.assign(Object.assign({}, this.state), state);\r\n        this.changeDetectorRef.detectChanges();\r\n    }\r\n    getScrolledByDirection(property) {\r\n        let event;\r\n        return this.scrolled.pipe(tap((e) => event = e), pluck('target', property), pairwise(), filter(([prev, curr]) => prev !== curr), map(() => event));\r\n    }\r\n    /**\r\n     * Set hovered state if a scrollbar is being hovered\r\n     */\r\n    setHovered(hovered) {\r\n        this.zone.run(() => this.setState(Object.assign({}, hovered)));\r\n    }\r\n    /**\r\n     * Set dragging state if a scrollbar is being dragged\r\n     */\r\n    setDragging(dragging) {\r\n        this.zone.run(() => this.setState(Object.assign({}, dragging)));\r\n    }\r\n    /**\r\n     * Set clicked state if a scrollbar track is being click\r\n     */\r\n    setClicked(scrollbarClicked) {\r\n        this.zone.run(() => this.setState({ scrollbarClicked }));\r\n    }\r\n    ngOnInit() {\r\n        // Set the viewport based on user choice\r\n        this.zone.runOutsideAngular(() => {\r\n            if (this.customViewPort) {\r\n                this.viewport = this.customViewPort;\r\n                this.defaultViewPort.setAsWrapper();\r\n            }\r\n            else {\r\n                this.viewport = this.defaultViewPort;\r\n            }\r\n            // Activate the selected viewport\r\n            this.viewport.setAsViewport(this.viewClass);\r\n            let scrollStream = fromEvent(this.viewport.nativeElement, 'scroll', { passive: true });\r\n            // Throttle scroll event if 'scrollAuditTime' is set\r\n            scrollStream = this.scrollAuditTime ? scrollStream.pipe(auditTime(this.scrollAuditTime)) : scrollStream;\r\n            // Initialize scroll streams\r\n            this.scrolled = scrollStream.pipe(takeUntil(this.destroyed));\r\n            this.verticalScrolled = this.getScrolledByDirection('scrollTop');\r\n            this.horizontalScrolled = this.getScrolledByDirection('scrollLeft');\r\n        });\r\n    }\r\n    ngOnChanges(changes) {\r\n        // Update only when the viewport is initialized\r\n        if (this.viewport) {\r\n            this.update();\r\n        }\r\n    }\r\n    ngAfterViewInit() {\r\n        // Initial update\r\n        this.update();\r\n        // Update on dir changes\r\n        this.dir.change.pipe(tap(() => this.update()), takeUntil(this.destroyed)).subscribe();\r\n    }\r\n    ngOnDestroy() {\r\n        this.destroyed.next();\r\n        this.destroyed.complete();\r\n    }\r\n    /**\r\n     * Update local state and the internal scrollbar controls\r\n     */\r\n    update() {\r\n        if (!this.autoHeightDisabled) {\r\n            this.updateHeight();\r\n        }\r\n        if (!this.autoWidthDisabled) {\r\n            this.updateWidth();\r\n        }\r\n        // Re-evaluate the state after setting height or width\r\n        this.updateState();\r\n        this.updated.next();\r\n    }\r\n    /**\r\n     * Smooth scroll functions\r\n     */\r\n    scrollTo(options) {\r\n        return this.smoothScroll.scrollTo(this.viewport.nativeElement, options);\r\n    }\r\n    /**\r\n     * Scroll to element by reference or selector\r\n     */\r\n    scrollToElement(target, options) {\r\n        return this.smoothScroll.scrollToElement(this.viewport.nativeElement, target, options);\r\n    }\r\n    updateHeight() {\r\n        // Auto-height: Set component height to content height\r\n        if (this.appearance === 'standard' && this.scrollbarX) {\r\n            // if scrollbar-x is displayed in standard mode\r\n            this.nativeElement.style.height = `${this.viewport.contentHeight + this.scrollbarX.nativeElement.clientHeight}px`;\r\n        }\r\n        else {\r\n            this.nativeElement.style.height = `${this.viewport.contentHeight}px`;\r\n        }\r\n    }\r\n    updateWidth() {\r\n        // Auto-width: Set component minWidth to content width\r\n        if (this.appearance === 'standard' && this.scrollbarY) {\r\n            // if scrollbar-y is displayed in standard mode\r\n            this.nativeElement.style.width = `${this.viewport.contentWidth + this.scrollbarY.nativeElement.clientWidth}px`;\r\n        }\r\n        else {\r\n            this.nativeElement.style.width = `${this.viewport.contentWidth}px`;\r\n        }\r\n    }\r\n}\r\nNgScrollbar.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbar, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i0.ChangeDetectorRef }, { token: i3.Directionality }, { token: i2$1.SmoothScrollManager }, { token: ScrollbarManager }], target: i0.ɵɵFactoryTarget.Component });\r\nNgScrollbar.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.2.3\", type: NgScrollbar, selector: \"ng-scrollbar\", inputs: { disabled: \"disabled\", sensorDisabled: \"sensorDisabled\", pointerEventsDisabled: \"pointerEventsDisabled\", viewportPropagateMouseMove: \"viewportPropagateMouseMove\", autoHeightDisabled: \"autoHeightDisabled\", autoWidthDisabled: \"autoWidthDisabled\", viewClass: \"viewClass\", trackClass: \"trackClass\", thumbClass: \"thumbClass\", minThumbSize: \"minThumbSize\", trackClickScrollDuration: \"trackClickScrollDuration\", pointerEventsMethod: \"pointerEventsMethod\", track: \"track\", visibility: \"visibility\", appearance: \"appearance\", position: \"position\", sensorDebounce: \"sensorDebounce\", scrollAuditTime: \"scrollAuditTime\" }, outputs: { updated: \"updated\" }, host: { properties: { \"class.ng-scrollbar\": \"true\" } }, providers: [{ provide: NgScrollbarBase, useExisting: NgScrollbar }], queries: [{ propertyName: \"customViewPort\", first: true, predicate: ScrollViewport, descendants: true, static: true }], viewQueries: [{ propertyName: \"scrollbarY\", first: true, predicate: [\"scrollbarY\"], descendants: true, read: ElementRef }, { propertyName: \"scrollbarX\", first: true, predicate: [\"scrollbarX\"], descendants: true, read: ElementRef }, { propertyName: \"defaultViewPort\", first: true, predicate: ScrollViewport, descendants: true, static: true }], exportAs: [\"ngScrollbar\"], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"ng-scrollbar-wrapper\\\" [ngAttr]=\\\"state\\\">\\r\\n  <div class=\\\"ng-scroll-viewport-wrapper\\\"\\r\\n       (resizeSensor)=\\\"update()\\\"\\r\\n       [sensorDebounce]=\\\"sensorDebounce\\\"\\r\\n       [sensorDisabled]=\\\"sensorDisabled\\\">\\r\\n    <div scrollViewport\\r\\n         hideNativeScrollbar>\\r\\n      <div>\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-container *ngIf=\\\"!disabled\\\">\\r\\n    <scrollbar-x #scrollbarX\\r\\n                 *ngIf=\\\"state.horizontalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isHorizontallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.verticalUsed\\\">\\r\\n    </scrollbar-x>\\r\\n    <scrollbar-y #scrollbarY\\r\\n                 *ngIf=\\\"state.verticalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isVerticallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.horizontalUsed\\\">\\r\\n    </scrollbar-y>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n\", styles: [\"::ng-deep .ng-scrollbar-measure{scrollbar-width:none;-ms-overflow-style:none}::ng-deep .ng-scrollbar-measure::-webkit-scrollbar{display:none}:host{--scrollbar-border-radius: 7px;--scrollbar-padding: 4px;--scrollbar-track-color: transparent;--scrollbar-thumb-color: rgba(0, 0, 0, .2);--scrollbar-thumb-hover-color: var(--scrollbar-thumb-color);--scrollbar-size: 5px;--scrollbar-hover-size: var(--scrollbar-size);--scrollbar-overscroll-behavior: initial;--scrollbar-transition-duration: .4s;--scrollbar-transition-delay: .8s;--scrollbar-thumb-transition: height ease-out .15s, width ease-out .15s;--scrollbar-track-transition: height ease-out .15s, width ease-out .15s;display:block;position:relative;height:100%;max-height:100%;max-width:100%;box-sizing:content-box!important}:host>.ng-scrollbar-wrapper{--scrollbar-total-size: calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size: var(--scrollbar-size);--horizontal-scrollbar-size: var(--scrollbar-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}:host>.ng-scrollbar-wrapper[verticalHovered=true],:host>.ng-scrollbar-wrapper[verticalDragging=true]{--vertical-scrollbar-size: var(--scrollbar-hover-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[horizontalHovered=true],:host>.ng-scrollbar-wrapper[horizontalDragging=true]{--horizontal-scrollbar-size: var(--scrollbar-hover-size);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:0;bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:var(--scrollbar-total-size);bottom:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{scrollbar-width:none;-ms-overflow-style:none}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport::-webkit-scrollbar,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport::-webkit-scrollbar{display:none}:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]>.scrollbar-control{opacity:0;transition-property:opacity;transition-duration:var(--scrollbar-transition-duration);transition-delay:var(--scrollbar-transition-delay)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:hover>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:active>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:focus>.scrollbar-control{opacity:1;transition-duration:var(--scrollbar-transition-duration);transition-delay:0ms}:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper{overflow:hidden}.ng-scroll-viewport{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position;overscroll-behavior:var(--scrollbar-overscroll-behavior)}::ng-deep .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scrollbar-wrapper,.ng-scroll-viewport-wrapper,.ng-scroll-layer,::ng-deep .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}\\n\", \"::ng-deep .ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;user-select:none}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}::ng-deep .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}::ng-deep .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}\\n\"], components: [{ type: ScrollbarX, selector: \"scrollbar-x\" }, { type: ScrollbarY, selector: \"scrollbar-y\" }], directives: [{ type: NgAttr, selector: \"[ngAttr]\", inputs: [\"ngAttr\"] }, { type: ResizeSensor, selector: \"[resizeSensor]\", inputs: [\"sensorDebounce\", \"sensorDisabled\"], outputs: [\"resizeSensor\"] }, { type: ScrollViewport, selector: \"[scrollViewport]\" }, { type: HideNativeScrollbar, selector: \"[hideNativeScrollbar]\" }, { type: i9.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbar, decorators: [{\r\n            type: Component,\r\n            args: [{ selector: 'ng-scrollbar', exportAs: 'ngScrollbar', changeDetection: ChangeDetectionStrategy.OnPush, host: { '[class.ng-scrollbar]': 'true' }, providers: [{ provide: NgScrollbarBase, useExisting: NgScrollbar }], template: \"<div class=\\\"ng-scrollbar-wrapper\\\" [ngAttr]=\\\"state\\\">\\r\\n  <div class=\\\"ng-scroll-viewport-wrapper\\\"\\r\\n       (resizeSensor)=\\\"update()\\\"\\r\\n       [sensorDebounce]=\\\"sensorDebounce\\\"\\r\\n       [sensorDisabled]=\\\"sensorDisabled\\\">\\r\\n    <div scrollViewport\\r\\n         hideNativeScrollbar>\\r\\n      <div>\\r\\n        <ng-content></ng-content>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <ng-container *ngIf=\\\"!disabled\\\">\\r\\n    <scrollbar-x #scrollbarX\\r\\n                 *ngIf=\\\"state.horizontalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isHorizontallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.verticalUsed\\\">\\r\\n    </scrollbar-x>\\r\\n    <scrollbar-y #scrollbarY\\r\\n                 *ngIf=\\\"state.verticalUsed\\\"\\r\\n                 [attr.scrollable]=\\\"state.isVerticallyScrollable\\\"\\r\\n                 [attr.fit]=\\\"state.horizontalUsed\\\">\\r\\n    </scrollbar-y>\\r\\n  </ng-container>\\r\\n</div>\\r\\n\\r\\n\", styles: [\"::ng-deep .ng-scrollbar-measure{scrollbar-width:none;-ms-overflow-style:none}::ng-deep .ng-scrollbar-measure::-webkit-scrollbar{display:none}:host{--scrollbar-border-radius: 7px;--scrollbar-padding: 4px;--scrollbar-track-color: transparent;--scrollbar-thumb-color: rgba(0, 0, 0, .2);--scrollbar-thumb-hover-color: var(--scrollbar-thumb-color);--scrollbar-size: 5px;--scrollbar-hover-size: var(--scrollbar-size);--scrollbar-overscroll-behavior: initial;--scrollbar-transition-duration: .4s;--scrollbar-transition-delay: .8s;--scrollbar-thumb-transition: height ease-out .15s, width ease-out .15s;--scrollbar-track-transition: height ease-out .15s, width ease-out .15s;display:block;position:relative;height:100%;max-height:100%;max-width:100%;box-sizing:content-box!important}:host>.ng-scrollbar-wrapper{--scrollbar-total-size: calc(var(--scrollbar-size) + var(--scrollbar-padding) * 2);--vertical-scrollbar-size: var(--scrollbar-size);--horizontal-scrollbar-size: var(--scrollbar-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2)}:host>.ng-scrollbar-wrapper[verticalHovered=true],:host>.ng-scrollbar-wrapper[verticalDragging=true]{--vertical-scrollbar-size: var(--scrollbar-hover-size);--vertical-scrollbar-total-size: calc(var(--vertical-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[horizontalHovered=true],:host>.ng-scrollbar-wrapper[horizontalDragging=true]{--horizontal-scrollbar-size: var(--scrollbar-hover-size);--horizontal-scrollbar-total-size: calc(var(--horizontal-scrollbar-size) + var(--scrollbar-padding) * 2);cursor:default}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:var(--scrollbar-total-size);right:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=ltr][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-left:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{left:0;right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertY][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][verticalUsed=true][position=invertAll][dir=rtl][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-right:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:0;bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-bottom:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=scrollbar]>.ng-scroll-viewport-wrapper{top:var(--scrollbar-total-size);bottom:0}:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertX][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false][appearance=standard][horizontalUsed=true][position=invertAll][pointerEventsMethod=viewport]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{padding-top:var(--scrollbar-total-size)}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{scrollbar-width:none;-ms-overflow-style:none}:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport::-webkit-scrollbar,:host>.ng-scrollbar-wrapper[deactivated=false]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport::-webkit-scrollbar{display:none}:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{bottom:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{left:0;right:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>.ng-native-scrollbar-hider,:host>.ng-scrollbar-wrapper[deactivated=false][verticalUsed=true][dir=rtl]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-native-scrollbar-hider{right:0;left:var(--native-scrollbar-size)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]>.scrollbar-control{opacity:0;transition-property:opacity;transition-duration:var(--scrollbar-transition-duration);transition-delay:var(--scrollbar-transition-delay)}:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:hover>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:active>.scrollbar-control,:host>.ng-scrollbar-wrapper[deactivated=false][visibility=hover]:focus>.scrollbar-control{opacity:1;transition-duration:var(--scrollbar-transition-duration);transition-delay:0ms}:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-x:auto;overflow-y:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow-y:auto;overflow-x:hidden}:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,:host>.ng-scrollbar-wrapper[verticalUsed=true][horizontalUsed=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{overflow:auto}.ng-scroll-viewport-wrapper{overflow:hidden}.ng-scroll-viewport{-webkit-overflow-scrolling:touch;contain:strict;will-change:scroll-position;overscroll-behavior:var(--scrollbar-overscroll-behavior)}::ng-deep .ng-scroll-content{position:relative!important;display:inline-block;min-width:100%}.ng-scrollbar-wrapper,.ng-scroll-viewport-wrapper,.ng-scroll-layer,::ng-deep .ng-scroll-viewport{position:absolute;left:0;right:0;top:0;bottom:0}\\n\", \"::ng-deep .ng-scrollbar-wrapper[pointerEventsMethod=viewport]>.scrollbar-control{pointer-events:none}::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[horizontalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[verticalDragging=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>.ng-scroll-viewport,::ng-deep .ng-scrollbar-wrapper[scrollbarClicked=true]>.ng-scroll-viewport-wrapper>*>*>::ng-deep .ng-scroll-viewport{-webkit-user-select:none;-moz-user-select:none;user-select:none}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control{position:absolute;display:flex;justify-content:center;align-items:center;transition:var(--scrollbar-track-transition)}::ng-deep .ng-scrollbar-wrapper>.scrollbar-control[scrollable=false] .ng-scrollbar-thumb{display:none}::ng-deep .ng-scrollbar-track{height:100%;width:100%;z-index:1;border-radius:var(--scrollbar-border-radius);background-color:var(--scrollbar-track-color);overflow:hidden;transition:var(--scrollbar-track-transition);cursor:default}::ng-deep .ng-scrollbar-thumb{box-sizing:border-box;position:relative;border-radius:inherit;background-color:var(--scrollbar-thumb-color);transform:translateZ(0);transition:var(--scrollbar-thumb-transition)}\\n\"] }]\r\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i0.ChangeDetectorRef }, { type: i3.Directionality }, { type: i2$1.SmoothScrollManager }, { type: ScrollbarManager }]; }, propDecorators: { disabled: [{\r\n                type: Input\r\n            }], sensorDisabled: [{\r\n                type: Input\r\n            }], pointerEventsDisabled: [{\r\n                type: Input\r\n            }], viewportPropagateMouseMove: [{\r\n                type: Input\r\n            }], autoHeightDisabled: [{\r\n                type: Input\r\n            }], autoWidthDisabled: [{\r\n                type: Input\r\n            }], viewClass: [{\r\n                type: Input\r\n            }], trackClass: [{\r\n                type: Input\r\n            }], thumbClass: [{\r\n                type: Input\r\n            }], minThumbSize: [{\r\n                type: Input\r\n            }], trackClickScrollDuration: [{\r\n                type: Input\r\n            }], pointerEventsMethod: [{\r\n                type: Input\r\n            }], track: [{\r\n                type: Input\r\n            }], visibility: [{\r\n                type: Input\r\n            }], appearance: [{\r\n                type: Input\r\n            }], position: [{\r\n                type: Input\r\n            }], sensorDebounce: [{\r\n                type: Input\r\n            }], scrollAuditTime: [{\r\n                type: Input\r\n            }], updated: [{\r\n                type: Output\r\n            }], scrollbarY: [{\r\n                type: ViewChild,\r\n                args: ['scrollbarY', { read: ElementRef }]\r\n            }], scrollbarX: [{\r\n                type: ViewChild,\r\n                args: ['scrollbarX', { read: ElementRef }]\r\n            }], defaultViewPort: [{\r\n                type: ViewChild,\r\n                args: [ScrollViewport, { static: true }]\r\n            }], customViewPort: [{\r\n                type: ContentChild,\r\n                args: [ScrollViewport, { static: true }]\r\n            }] } });\n\nclass NgScrollbarModule {\r\n    static withConfig(options) {\r\n        return {\r\n            ngModule: NgScrollbarModule,\r\n            providers: [\r\n                { provide: NG_SCROLLBAR_OPTIONS, useValue: options }\r\n            ]\r\n        };\r\n    }\r\n}\r\nNgScrollbarModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\r\nNgScrollbarModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarModule, declarations: [NgScrollbar,\r\n        ScrollViewport,\r\n        HideNativeScrollbar,\r\n        NgAttr,\r\n        ResizeSensor,\r\n        ThumbYDirective,\r\n        ThumbXDirective,\r\n        TrackXDirective,\r\n        TrackYDirective,\r\n        ScrollbarY,\r\n        ScrollbarX], imports: [CommonModule,\r\n        BidiModule,\r\n        PortalModule,\r\n        PlatformModule,\r\n        SmoothScrollModule], exports: [NgScrollbar,\r\n        ScrollViewport] });\r\nNgScrollbarModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarModule, imports: [[\r\n            CommonModule,\r\n            BidiModule,\r\n            PortalModule,\r\n            PlatformModule,\r\n            SmoothScrollModule\r\n        ]] });\r\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.2.3\", ngImport: i0, type: NgScrollbarModule, decorators: [{\r\n            type: NgModule,\r\n            args: [{\r\n                    imports: [\r\n                        CommonModule,\r\n                        BidiModule,\r\n                        PortalModule,\r\n                        PlatformModule,\r\n                        SmoothScrollModule\r\n                    ],\r\n                    declarations: [\r\n                        NgScrollbar,\r\n                        ScrollViewport,\r\n                        HideNativeScrollbar,\r\n                        NgAttr,\r\n                        ResizeSensor,\r\n                        ThumbYDirective,\r\n                        ThumbXDirective,\r\n                        TrackXDirective,\r\n                        TrackYDirective,\r\n                        ScrollbarY,\r\n                        ScrollbarX\r\n                    ],\r\n                    exports: [\r\n                        NgScrollbar,\r\n                        ScrollViewport\r\n                    ]\r\n                }]\r\n        }] });\n\n/*\r\n * Public API Surface of ngx-scrollbar\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NG_SCROLLBAR_OPTIONS, NgScrollbar, NgScrollbarModule, ScrollViewport, ScrollbarManager };\n"]},"metadata":{},"sourceType":"module"}